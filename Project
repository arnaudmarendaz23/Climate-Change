--- 
title: "The origin, effects and differences of the local temperature evolution"
author: "by Mohammad Fajer Elyas, Solenn Sangi and Arnaud Marendaz"
date: "2022-11-09"
output: 
  html_document:
    toc: true
    toc_float: true
    toc_depth: 4
    df_print: paged 
    code_folding: hide 

---
# Executive Summary
  
  
- <font size="4"> **Reasearch goal** </font>
<font size="3"> This analysis's primary goal is to assess how much the rise of temperature is impacted by the emissions (of CO2). In a subsequent step, we look at what affects the emissions on CO2 and the place of humanhood in it. </font>

- <font size="4"> **Methodology** </font>
<font size="3"> We performed our research primarily using seven data sets, each of which was relevant to one of the three pillars of sustainability, namely the economy, society, and environment. Since rising temperatures affect all three sectors, selecting factors from these several sustainability categories allowed us to accurately allocate the major causes of the changes over the previous sixty years. In order to assess that the rising of temperatures is a global problem, we had to observe the changes on a local scale in different area, thus we chose to analyse the data of ten countries spread over the five continents;  Belgium, Brazil, (Egypt), Finland, Japan, (Netherlands), South Africa, (South Korea), (USA). </font>

- **Main Takeaways**


- **Conclusion**

$~$
$~$
$~$

# 1. Introduction


## 1.1. Current Situation and Motivation

<font size="3"> According to Rockström et al. (2009), there are nine planetary boundaries which the human should not exceed if it wants to maintain favorable conditions on earth for their survival. One of them is so-called climate change. There fore, we can assess that climate change is the biggest challenge that humankind has ever faced. The definition of climate change is often broad or mixed with meteorological concepts. According to the Carbon Almanac (2022, p. 23), weather does not mean climate, but both concept are related. Climate refers to the overall weather within a certain geographical area.

Rising temperatures will cause many problems, such as extreme weather events, rising sea levels, which will force millions of people to migrate, increase the number of diseases, accelerate the extinction of species, and threaten the balance of biodiversity. According to the Carbon Almanac and many other researchers (2022, p.2), 70% of our climate problems are due to coal, combustion, cows and concrete. Those factors generate mainly greenhouse gases, such as CO2 or methane and hence contribute to greenhouse effect and make the earth hotter. 

In order to reach climate goals, we have to lower our emission to 1 ton of CO2 per person per year. In this sense, it is interesting to note that Greta Thunberg in her book "Cilmate Book" (2022) mentions the fact that several countries have drastically reduced their carbon footprint since 1980. This might have been a reassuring point, however, during this same period, the global temperature has continued to rise. This can be explained by the fact that western countries such as France have relocated their production en masse, reducing their carbon emissions.
. 
In order to reach climate goals targted in Paris 2015, we have to lower our emission to 1 ton of CO2 per person per year. However, actually we seem far from this. 

According to Zeke Hausfather (2018), there are quite large local temperature differences, depending on various parameters such as geographical location. For example, a recent study has shown that France is warming up faster than the others, and has already reached the critical threshold of +1.7°C, where the worldwide average is +1.2°C (Ribes, Boé, Qasmi, Dubuisson, Douville & Terray, 2022, p. 1). This means that the effects of a temperature increase of 2°C, as explained above, could affect countries in the near future. There is therefore an inequality of the impact of global warming.

All this explains why we decided to carry out a study on sustainable development, and more precisely on the different temperature trends in different countries of the world for the period between 1970 and 2013. This time horizon was imposed on us by the data at our disposal. Thus, in order to make our analysis as global as possible, we have tried, with the data currently available and historically, to select countries from various geographical areas, with developed or developing economies, with growing or stagnating populations. The targeted countries are: Norway, Brazil, South Africa, Belgium, Japan, Canada, Argentina, Australia, Thailand and Peru. </font>

$~$

## 1.2. Related Works
<font size="3"> Below you will find some good books about climate change. First, the book by an independent journalist, "Bon Pote", which is a good popularisation of the subject. The other two books are scientific and very data-driven. A work closer to ours is the one done by Zeke Hausfather and quoted above, explaining that France is warming faster than the average. Finally, what would work on sustainable development be without the titanic work done for years by the IPCC and their alarmist reports and data. 


Bonpote, Brès, A. & Marc, C.(2022). Tout comprendre (ou presque) sur le climat. Paris: CNRS.

[Hausfather, Z. (2021). Summer 2021 set global land temperature record.](https://cpmaine.org/2021/10/21/featured-article-summer-2021-set-global-land-temperature-record-by-zeke-hausfather/) 

Thunberg, G. (2022). The Climate book. London: Penguin.

The Carbon Almanac. (2022). It's not too late. New York: Penguin.

[IPCC. (2022). Climate Change 2022.](https://www.ipcc.ch/sr15/) </font>

$~$
  
## 1.3. Research questions
  
* **Descriptive statistic**
<font size="3">  + Is there a global warming for each selected country from 1970 to 2013?
  + How have the emissions of CO2 for each selected country changed from 1970 to 2013?
  + How is the correlation between the emissions and the warming for each selected country?
  + Is the difference in temperature more interesting than the raw average temperature by year ?
  + Is there a kind of inertia relationship between CO2 emissions and temperatures ? </font>
  
* **Inferential statistic**
<font size="3">  + What are the factors (economical, environmental or social) that impact/explain the most the emissions, hence the global warming?
  + In relation to the question 2.1, are the north countries more impacted ?
  + Can we observed with the data what G. Thunberg explains in her book, the reduction of CO2 emission in some countries due to outsourcing or delocalization?
  + Finally, is there an increase in death in the country affected by increased severe temperatures ? </font>
  
  $~$
  $~$
  $~$
  $~$
  
  
# 2. Data
## 2.1. Data Set of Global warming (raw)
First, we are going to take the **library** that we are going to use in this project. this will help us performing some complex statistic calculation or help us cleaning the data. At the same time, let us upload our data from the various datasets defined previously and store them into variables.
```{r results=FALSE, message=FALSE, warning=FALSE}
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(car)
library(kableExtra)
library(xtable)
library(patchwork)
library(knitr)
library(ggpubr)
population <- read.csv("TotalPopulationBySex.csv")
GDP <- read.csv("world_country_gdp_usd.csv")
unemployment <- read.csv("inflation interest unemployment.csv")
temperatures <- read.csv("GlobalLandTemperaturesByCountry.csv")
CO2_emissions <- read.csv("CO2_Emissions_1960-2018.csv")
urban_population <- read.csv2("Data urban population.csv")
location <- read.csv("world_country_and_usa_states_latitude_and_longitude_values.csv")
demographic <- read.csv("demographic.csv")
deltatemp <- read.csv("FAOSTAT_data_1-10-2022.csv")
```
### 2.1.1 Temperatures
You will find below the source of this data set:
  [Kaggle - temperature change dataset.](https://www.kaggle.com/datasets/sevgisarac/temperature-change?resource=download) 
The temperature evolution dataset found on Kaggle explains the annual, monthly evolution of the average surface temperature in 190 countries. The time of this data is from 1960 to 2020 and the unit is degrees Celsius. Below you will find the explanation of the column, and the top rows of the raw dataset.
```{r}
knitr::kable(cbind(
  c("dt", "AverageTemperature", "AverageTemperatureUncertainty", "Country"),
  c("Checked date of the temperature", "The average daily temperature per countries ", "Error margin", "Name of the country"
  )
), col.names = c('Variables', 'Meanings')) %>% kable_styling(position = "center")
```
```{r}
head(temperatures)
```
### 2.1.2. CO2 Emissions
  You will find below the source of this data set:[Kaggle - CO2 emission dataset.](https://www.kaggle.com/datasets/kkhandekar/co2-emissions-1960-2018)
The CO2 emissions dataset represents the CO2 emissions per capita in kilotonne and per country over the period 1960-2018. Below you will see the description of the variable and the top row of the raw data.

```{r}
knitr::kable(cbind(
  c("Countryname", "Emissionyear"),
  c("The country from where the emissions were emitted","The accumulated emission during the year")
), col.names = c('Variables', 'Meanings')) %>% kable_styling(position = "center")
```
```{r}
kbl(cbind(head(CO2_emissions))) %>%
  kable_paper() %>%
  scroll_box(width = "800px", height = "260px")
```
$~$
  
### 2.1.3. Delta Temperatures
  This dataset show the difference between the average temperature of the period 1960-1980 and the current year temperature. This difference can be positive if this year has been warmer than the selected referential, or negative if it has been colder.

[Kaggle - Data set of differential temperatures](https://www.kaggle.com/datasets/sevgisarac/temperature-change?resource=download)
```{r}
knitr::kable(cbind(
  c('Area Code','Area', 'Months Code','Months','Element Code','Element','Unit','Y1961','Y1962','YXXXX'),
  c("The numerical code of area column.", "Countries and Territories (190 countries and 37 other territories).", 'The numerical code of months column.', 'Months, Seasons, Meteorological year.', 'The numerical code of element column.', "'Temperature change', 'Standard Deviation'.", "Celsius degrees °C, type of unit is an object.", "Year 1961", "Year 1962", "Year XXXX")
), col.names = c('Variables', 'Meanings')) %>% kable_styling(position = "center")
```
```{r}
kbl(cbind(head(deltatemp))) %>%
  kable_paper() %>%
  scroll_box(width = "800px", height = "260px")
```
$~$
$~$
  
## 2.2. Data set of local warming (raw)
### 2.2.1. GDP
  This dataset shows the evolution of GDP per country per year in $.

[Kaggle - GDP dataset](https://www.kaggle.com/datasets/tmishinev/world-country-gdp-19602021)

```{r}
knitr::kable(cbind(
  c('Country Name','Country Code', 'Year','GDP_USD','GDP_percapita_USD'),
  c("Full name of the Country", "3 letter code", "Integer value of the year", "Total yearly GDP for the country in USD", "GDP per capita in USD")
), col.names = c('Variables', 'Meanings')) %>% kable_styling(position = "center")
```
```{r}
kbl(cbind(head(GDP))) %>%
  kable_paper() %>%
  scroll_box(width = "800px", height = "260px")
```
$~$
  
### 2.2.2. Unemployment
  This data set shows historical inflation, interest and unemployment rates by country from 1950 to 2021. Below you will find the link of the dataset, and then a table describing the different column and the top row of the raw dataset. 

[Kaggle - Umepmloyment dataset](https://www.kaggle.com/datasets/prasertk/inflation-interest-and-unemployment-rate)
```{r}
knitr::kable(cbind(
  c('Country','Year', 'Inflation, consumer prices (annual %)','Inflation, GDP deflator (annual %)','Real interest rate (%)','Deposit interest rate (%)','Lending interest rate (%)','Unemployment, total','Iso3c'),
  c("Country name", "Year", "Annual cosumer price inflation in %", "Inflation as measured by the annual growth rate", "Interest rate without inflation", "Interest rate on cash deposits of account holders in %", "Interest rate charged by lenders to borrowers in %", "Estimated numbers of national unemployed people", "ISO country code (3 characters)")
), col.names = c('Variables', 'Meanings')) %>% kable_styling(position = "center")
```
```{r}
kbl(cbind(head(unemployment))) %>%
  kable_paper() %>%
  scroll_box(width = "800px", height = "260px")
```
$~$

### 2.2.3. Population 
  The population dataset shows us the population of 1970, 1980, 1990, 2000, 2010, 2020 and 2022 of the targeted countries, but also other data such as growth rate, density or area of the country that will not interest us in the framework of our project. Below you'll first see the link, and a table explaining the variables and a table with the first columns of the raw data:

[United Nations - Population dataset](https://population.un.org/wpp/Download/Standard/CSV/)

```{r}
knitr::kable(cbind(
  c("SortOrder", "LocID", "Notes", "ISO3_code", "ISO2_code", "SDMX_code", "LocTypeID", "Location", "LocTypeName", "ParentID", "VarID", "Variant Time", "MidPeriod", "PopMale", "PopFemale", "PopTotal", "PopDensity"),
  c("Record counter", "Numeric code for the location; for countries", "UN symbol linked to a location notes file", "ISO 3166-1 alpha-3 location codes", "ISO 3166-1 alpha-2 location codes", "SDMX Global Registry, Cross domain code list for geographical areas", "Code for location type", "Type of location", "Numeric code of the parent location", "Name of the region, subregion, country or area", "Numeric code for the scenario", "projection scenario name", "Numeric value identifying the mid period of the data", "Male Population, as of 1 July (thousands)"
, "Female Population, as of 1 July (thousands)", "Total Population, as of 1 July (thousands)", "Population Density, as of 1 July")
), col.names = c('Variables', 'Meanings')) %>% kable_styling(position = "center")
```
```{r}
kbl(cbind(head(population))) %>%
  kable_paper() %>%
  scroll_box(width = "800px", height = "260px")
```
$~$

### 2.2.4. Demographic
This data set displays the annual estimates and standard projection scenarios of all demography indicator per country from from 1950 to 2100. The main that will interest us are the number of deaths and infants deaths per year. For a volume of the data purpose, we will do a listing of the type of variables that one can find in the dataset. Below you'll first find the link of the dataset, and then a table explaining the different variables and a table showing the first rows of the raw dataset:
  
  [United Nations - Demographic Indicators Dataset](https://population.un.org/wpp/Download/Files/1_Indicators%20(Standard)/EXCEL_FILES/1_General/WPP2022_GEN_F01_DEMOGRAPHIC_INDICATORS_COMPACT_REV1.xlsx)

```{r}
knitr::kable(cbind(
  c("Variant", "Population", "Fertility", "Mortality", "Migration"),
  c("Projection scenario name (Estimates is the most used)",  "Population indicators per year per country, such as male and women ratio, median age or population growth", "Fertility indicators per year per country such as number of birth, birth by woman or total fertility rate", "Mortality indicators per year per country, such as total death, total life expectancy or infant death", "Number of migration, net migration rate")
), col.names = c('Variables', 'Meanings')) %>% kable_styling(position = "center")
```
```{r}
kbl(cbind(head(demographic))) %>%
  kable_paper() %>%
  scroll_box(width = "800px", height = "260px")
```
$~$
  $~$
  
## 2.3. Cleaining the data
  
<font size="3"> First, let us focus on the first targeted dataset, the one store in the variable names **temperatures**. We want to have a tibble, and not a dataframe, so we first transform our table into a tibble. Then, we have to convert the data in their real datatype, such as date our numeric. Then, we select only the column that show variable which wille be use in our analysis later, in this case the temperature, the country and the year. In order to avoid `N.A.` value, we convert `N.A.` value into 0. Then, we have daily data, and we want to transform this into yearly data, by averaging the daily termperature by year, using the `group_by` function and the `summarize` function. Finally, we decided to select the period beginning in 1970 and finishing in 2022. 
  
Let us work on the next dataset, the CO2 emissions dataset. We produce for approximatively every dataset the same cleaning methodology, with small differences due to the raw dataset. For example below, with the CO2 dataset, we have first to rename the column, from X1961 to 1961, then to transform those multiple columns into a single column and associate the correct data. Then, we transform the datatype of t.

The next dataset we are considering here is the one with the GDP. In this dataset, we firstly selected only the targeted variables, which were GDP in $, the countries and the year. We replace the `N.A.` value by 0 for following statistical calculation and filter the selected period.

Then, let's move to the unemployment dataset. As previously, we began by selecting the targeted variables, then rename the column in order to avoid problem when we will merge the data. Then we transform the dataframe into a tibble, clean the `N.A.` value and filter according to the timeline.

Now, let us goes to the population dataset. There, nothing special to mention, we use the same basic step as previously.

Here, we move to the demographic dataset and look only at the main variables, namely countries, years, deaths and infant deaths. This follow the previously mentionned steps.

Last dataset to clean, was the difference of temperatures. First, we select the targeted variable, and then sort them in order to have data by month and year. We chose to focus on yearly differential and filter sccording to this. Then we rename the column and filter according to the period. </font>
```{r, message=FALSE, warning=FALSE}

temp <- select(temperatures, dt, AverageTemperature, Country)
temp[is.na(temp)] = 0
temp$year <- format(as.Date(temp$dt, format="%Y-%d-%m"),"%Y")
temperature_clean <- select(temp, year, Country, AverageTemperature)
temp_df <- temperature_clean %>%
  group_by(year, Country) %>%
  summarize((mean=mean(AverageTemperature)))
period <- filter(temp_df, year >= 1970)
colnames(period) = c("Years", "Countries", "C")
period[1] <- apply(period[1], 2, as.numeric)

attach(CO2_emissions)
emission <- as.tbl(CO2_emissions)
colnames(emission) <- c("Countries", 1960:2018)
years <- as.character(1960:2018)
emission_clean1 <- emission %>%
  pivot_longer(years, names_to = "Years", values_to = "CO2")
emission_clean1[2] <- apply(emission_clean1[2], 2, as.numeric)
emission_clean2 <- filter(emission_clean1, Years <= 2013)
emission_clean3 <- filter(emission_clean2, Years >= 1970)
emission_clean <- emission_clean3 %>% group_by(Countries) %>% mutate(CO2_cumulated = cumsum(CO2))

attach(GDP)
GDP_clean <- select(GDP, Country.Name, year, GDP_USD)
colnames(GDP_clean) <- c("Countries", "Years", "GDP")
GDP_tbl1 <- as.tbl(GDP_clean)
GDP_tbl1[is.na(GDP_tbl1)] = 0
GDP_tbl2 <- filter(GDP_tbl1, Years <= 2013)
GDP_tbl <- filter(GDP_tbl2, Years >= 1970)

attach(unemployment)
unemployment_clean <- select(unemployment, country, year, Unemployment..total....of.total.labor.force...national.estimate.)
colnames(unemployment_clean) <- c("Countries", "Years", "jobless")
unemployment_tbl1 <- as.tbl(unemployment_clean)
unemployment_tbl1[is.na(unemployment_tbl1)] = 0
unemployment_tbl2 <- filter(unemployment_tbl1, Years <= 2013)
unemployment_tbl <- filter(unemployment_tbl2, Years >= 1970)

population_clean <- select(population, Location, Time, PopTotal)
colnames(population_clean) <- c("Countries", "Years", "residents")
population_tbl1 <- as.tbl(population_clean)
population_tbl1[is.na(population_tbl1)] = 0
populations_tbl2 <- filter(population_tbl1, Years <= 2013)
population_tbl <- filter(populations_tbl2, Years >= 1970)

demographic_clean <- select(demographic, Location, Time, Deaths)
colnames(demographic_clean) <- c("Countries", "Years", "Deaths")
demographic_tbl <- as.tbl(demographic_clean)
demographic_tbl_clean1 <- filter(demographic_tbl, Years <= 2013)
demographic_tbl_clean <- filter(demographic_tbl_clean1, Years >= 1970)
  
attach(deltatemp)
deltatemperature <- select(deltatemp, Area, Months, Year, Value)
deltatemp1 <- deltatemperature[order(Area, Year),]
deltatemp2 <- filter(deltatemp1, Months == "Meteorological year" )
deltatemperatures1 <- select(deltatemp2, Area, Year, Value)
colnames(deltatemperatures1) <- c("Countries", "Years", "dC")
deltatemperatures2 <- as.tbl(deltatemperatures1)
deltatemperatures3 <- filter(deltatemperatures2, Years <= 2013)
deltatemperatures <- filter(deltatemperatures3, Years >= 1970)
```


Now, let us merge the different dataframe we have to create one big dataframe, with the targeted countries. First, we created a vector with the chossen countries. After that, we create a for loop to avoid repetitive coding. We let the loop filter every previously created dataset by the chosen countries to finally create our final datasets. 
$~$
```{r}
a = 1
i = 0
countries = c("Norway", "Brazil", "South Africa", "Austria", "Japan", "Canada", "Argentina", "Australia", "Thailand", "Peru")
for (i in countries){
  temp <- period %>%filter(Countries %in% countries) 
  co2 <- emission_clean %>%filter(Countries %in% countries)
  gdp <- GDP_tbl %>% filter(Countries %in% countries)
  unemployed <- unemployment_tbl %>% filter(Countries %in% countries)
  populated <- population_tbl%>% filter(Countries %in% countries)
  deads <- demographic_tbl_clean %>% filter(Countries %in% countries)
  temperature_differential <- deltatemperatures %>% filter(Countries %in% countries)
  variable_list <- list(temp, co2, gdp, unemployed, populated, deads, temperature_differential)
  df <- Reduce(function(x, y) merge(x, y, all=TRUE), variable_list)
  df<-arrange(df, Countries)
  return(df)
}
head(df)
```

$~$
  
## 2.4. Spotting mistakes
<font size="3"> First, we replace N.A. by 0, what could impact our results in a bad way. But then, we decided to reduce our period to limit as much as possible the existence of N.A. values. However, reducing the number of years, limit our analysis, because climate change take decades to evolve. 

One of the mistake that has probably occurred in our work was that those countries are quite huge and the difference in temperature in the north and south could be quite high. So using average yearly temperatures could be too simplified.

Perhaps, our timeline is too short. Those kind of event such as global warming appear to affect the earth on a long-term point og view. Here, we limit ourself on data between 1970 and 2013 because some of our parameters were not available before or after this timeline. 

$~$

# 3. Exploratory data analysis
## 3.1. Statistical national Model
  Now, we will begin to investigate each country individually first. Each country's analysis will follow the same process, beginning by looking at the correlation, then visualize the relation and finally using linear model.
$~$

### 3.1.1 Norway
We begin first of all with the Norway. Norway is a country situated in the North and got in average low temperatures. Thus, this is an occidental country, well-developed and industrialized. 

```{r, warning=FALSE, message=FALSE}
Norway <- df %>% filter(Countries %in% "Norway")
Norway_scale <- Norway
Norway_scale[, -c(1,2)] <- scale(Norway[, -c(1,2)])

library(table1)
table1::label(Norway$residents) <- "Population"
table1::label(Norway$GDP) <- "GDP"
table1::label(Norway$dC) <- "Temperature differential"
table1::label(Norway$Deaths) <- "Death"
table1::label(Norway$jobless) <- "Unemployed"
table1::label(Norway$CO2_cumulated) <- "Cumulated CO2"
table1::table1(~residents + GDP + Deaths + dC + jobless + CO2_cumulated, data = Norway, overall="Norway")
```

```{r, warning=FALSE, message=FALSE}
library(plotly())
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = Norway$dC, visible = TRUE)
fig <- fig %>% add_trace(y = Norway$C, visible = FALSE)
fig <- fig %>% add_trace(y = Norway$CO2, visible = FALSE)
fig <- fig %>% add_trace(y = Norway$CO2_cumulated, visible = FALSE)
fig <- fig %>% add_trace(y = Norway$residents, visible = FALSE)
fig <- fig %>% add_trace(y = Norway$Deaths, visible = FALSE)
fig <- fig %>% add_trace(y = Norway$GDP, visible = FALSE)
fig <- fig %>% add_trace(y = Norway$jobless, visible = FALSE)

fig <- fig %>% layout(
  title = "Norwegian Box Plot of each variables",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "Differention of Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Cumulated CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE)),
               label = "Population"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE)),
               label = "GDP"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)),
               label = "Unemployment")
            )
          )
        )
)
fig
```

#### 3.1.1.2. Correlation

In order to analyse the results in Norway, we first begin by investigation the different correlation rate between the variables, and particular with regard to temperatures or the differences of temperatures. We made this in order to have a first intuition on which variables we could potentially eliminate, and which relation we should investigate more. To compute this, we use the `corrplot` function, which illustrate in a good way the best relationship:

```{r, message=FALSE, warning=FALSE}
library(corrplot)
Norway <- df %>% filter(Countries %in% "Norway")
corrplot.mixed(cor(Norway[,-c(1, 2)]),
               lower = "number", 
               upper = "circle",
               tl.col = "black")
```

Thanks to this illustration, we can see that there are approximately the same relation between the differences in temperatures and the other parameters than with the average temperature. We can see high internal correlation; for example between population and urban population, between GDP and residents or conversely a high negative relation between the number of residents and the infant deaths rate or between GDP and Infant deaths rate. According to this 1st correlation plot, we deduce tht the economic factor GDP and the social factors such as population number or the number of jobless people impacted the global warming the most. It seems quite counter-intuitive. Also, we can see that there is a better correlation between cumulated C=2 emissions and higher temperature. It seems obvious that only this years CO2 impact temperature, but also the past one.

$~$
Now let's determine if the correlation coefficient between CO2 cumulated and temperature change is significantly different from 0. first, we pose the different assumptions: 
  
$$ \begin{cases} \ H0: ρ = 0 \\ H1:  ρ ≠ 0  \end{cases} $$
  
So we will test statistically if this seems right. We set the level of confidence at **α = 5%**. In order to do that, we have to find the tcritical and tcalculated and compare them. To calculate the critical value, we use the function `qt`and for the calculated t, the following calulation: 

$$ tcalc = \frac{r}{\frac{(1-r^{2})}{(df-2)}} $$

```{r}
tcrit <- qt(p=.05, df=43, lower.tail=FALSE)
tcalc <- 0.53/sqrt((1-0.53)^2/(43-2))
```
In this case, we have a tcalculated (7.22) that is far bigger than tcritical (1.68), so we reject H0 and this means that the correlation is significantly different from 0. 
$~$
  According to our correlation plot, it seems that some variable contains the same information, therefore using them twice does not add value to the models. For example, the number of residents and urban population have a correlation rate of 1, so we can eliminate one of the value. In case of high correlation, we can look at the multicolinearisty of variable by using the VIF coefficient. Generally, we consider that if the VIF coefficient is higher tan 5, the multicolinearity is severe and the variable had to be eliminated.
```{r, message=FALSE, warning=FALSE}
library(car)
attach(df)
model <- lm(Norway$C ~ Norway$CO2 + Norway$GDP + Norway$CO2_cumulated + Norway$jobless + Norway$Deaths  + Norway$residents)
vif_values <- vif(model)
bar_plot_vif1 <- barplot(vif_values, main = "VIF Values", horiz = TRUE, col = "steelblue", name=c("CO2", "GD", "cu", "Job", "dea", "Pop"))
abline(v = 5, lwd = 3, lty = 2)
modelvif <- lm(Norway$C ~ Norway$CO2 + Norway$Deaths + Norway$jobless)
vif_values2 <- vif(modelvif)
bar_plot_vif2 <- barplot(vif_values2, main = "VIF Values 2", horiz = TRUE, col = "steelblue", name=c("CO2","Jobless", "death"))
abline(v = 5, lwd = 3, lty = 2)
```

The first graph **VIF Values** illustrate the VIF coefficient of the different variables of our model. We see a line at the tripping point VIF = 5, and we eliminate the variable that are above 5. This let only the CO2, Jobless and Deaths variable, this mean one environmental, one economic and one social variable. But we'll first have a look at the different variable before really eliminate this value, this only gave us a good first idea of which values to consider.
$~$

#### 3.1.1.2. Visualization

<font size="3"> First, we want to determine whether there is a trend in temperature in Norway during the selected timeline. First, let's observe this with a trendline based on the `loess` function. In order to plot this, we use the function `plot_ly`from the `plotly`library. We parameter it in order to show the regression line and using an interactive drop-down menu in order to have a clean and understandable presentation. The x-axis represent the time in years and the y-axis the temperature in °C. The graph show that in Norway during this period the temperature have decrease from 1970 to 1980, and then constantly raised up to 2010 and then begin to decrease again. Therefore, it contradicts the global theory, which state that temperature have globally increase from several degrees since the 18th century.

At the same time, let's look at the historical C02 emission. In this part, we want to see if there is truly a relationship between temperature and CO2, because the correlation ratio does not go in this direction. That's what illustrate the second figure. We use the `ggplot`function too in those case. Here we've got a negative slope up to 1990, which mean that CO2 has decreased with years. After that, the emission have exponentially increases. This can be explained by the fact that in 1985, most of occidental countries have delocalize their production in other eastern countries. So it could have lowered their CO2 emissions.

Finally, we look at the difference in temperatures, to see if they are a better representation of the CO2 than the average temperature. According to the correlation plot, it seems that the differences in temperatures and the average temperatures are very similar in term of trends. And that does not really follow the patterns illustrate in CO2 emission, unless a inertia relationship exist. For example, the peak of CO2 emission was in 1985, and the peak in temperature in 2010.

Here we use a `loess` approximation to trace a line that show patterns. The, we use the package `plotly` to plot in an interactive and more visible way. We add point to the graph to see the point and the trendline. </font>

```{r, message=FALSE, warning=FALSE}
library(plotly)
ll.smooth1 = loess(Norway$C~Norway$Years, span=0.75)
ll.smooth2 = loess(Norway$CO2~Norway$Years, span=0.75)
ll.smooth3 = loess(Norway$dC~Norway$Years, span=0.75)
ll.smooth4 = loess(Norway$CO2_cumulated~Norway$Years, span=0.75)
fig <- plot_ly(Norway, x =  ~Years, mode="lines", alpha = 0.65)
fig <- fig %>% add_lines(y = predict(ll.smooth1), name = "Temperature", alpha=1)
fig <- fig %>% add_trace(y = ~Norway$C, name = "Temperature", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Norway$CO2, name = "CO2", visible = F, mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth3), name = "dC", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Norway$dC, name = "dC", visible = F, mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth4), name = "Cumulated CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Norway$CO2_cumulated, name = "Cumulated CO2", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Comparisons of variable based on the years",
    xaxis = list(domain = c(0.1, 1), title = "Years"),
    yaxis = list(title = "variable"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "ΔTemperatures"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "Cumulated CO2")
            )
          )
        )
)
fig
```

Here, we look at the relation between the difference in temperature and the variable population, unemployment, death and GDP. 
```{r, message=FALSE, warning=FALSE}
ll.smooth10 = lm(Norway$residents~Norway$dC, span=0.75)
ll.smooth11 = lm(Norway$jobless~Norway$dC, span=0.75)
ll.smooth12 = lm(Norway$Deaths~Norway$dC, span=0.75)
ll.smooth13 = lm(Norway$GDP~Norway$dC, span=0.75)

fig <- plot_ly(Norway, x =  ~Norway$dC, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth10), name = "Population", alpha=1)
fig <- fig %>% add_trace(y = ~Norway$residents, name = "Population", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth11), name = "Number of unemployed people", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Norway$jobless, name = "Number of unemployed people", visible = F, mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth12), name = "Number of deaths", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Norway$Deaths, name = "Number of deaths", mode = "markers", visible = F)
fig <- fig %>% add_trace(y = predict(ll.smooth13), name = "GDP", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Norway$GDP, name = "GDP", mode = "markers", visible = F)
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Norway",
    xaxis = list(domain = c(0.1, 1), title = "Difference of Temperature in Norway"),
    yaxis = list(title = "variable"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Population"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Unemployed"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "GDP")
            )
          )
        )
)
fig
```
Now, let's have a look at the relation between the temperature nd the CO2. Here, we use the same concept as previously, but only look at the CO2 and the temperatures. Both the differences and temperature and the temperature have a negative relation with the CO2, what seems impossible to us. This means that if the country emits more CO2, the temperature will decline. Why does this give us such representation ? We can imagine that the CO2 of one year will only affect the temperature some years later, or the cumulated CO2 should have more impact than raw CO2.

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Norway$C~Norway$CO2, span=0.75)
ll.smooth2 = lm(Norway$dC~Norway$CO2, span=0.75)
fig <- plot_ly(Norway, x =  ~Norway$CO2, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Norway$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Norway$dC, name = "Differences of temperatures in Norway", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Norway",
    xaxis = list(domain = c(0.1, 1), title = "CO2 emission in Norway"),
    yaxis = list(title = "°C"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

Let's have a look at the relation between the temperature or differences of temperatures and the cumulated CO2. The graph show a positive relationship, what looks more logical. So we can already imagine that the cumulated CO2 make more sense than the raw CO2 per year.
```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Norway$C~Norway$CO2_cumulated, span=0.75)
ll.smooth2 = lm(Norway$dC~Norway$CO2_cumulated, span=0.75)
fig <- plot_ly(Norway, x =  ~Norway$CO2_cumulated, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Norway$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Norway$dC, name = "Differences of temperatures", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variaton based on cumulated CO2 in Norway",
    xaxis = list(domain = c(0.1, 1), title = "Cumulated CO2 emissions of Norway"),
    yaxis = list(title = "°C"),
  updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

#### 3.1.1.3. Linear Regression Model(s)

<font size="3"> First, as we already know, we'll have to eliminate some variable. In order to do that, we use a backward selection based on the criteria AIC to select the variable that are statistically significant. In order to do that, we use the function `step` and choose as a direction backward. We will do this several time, to see if a model considering the differences in temperature make more sense statistically than with temperature, and look at CO2 and cumulated CO2 as the dependent variable. But let's begin with the temperatures. </font>

```{r, message=FALSE, warning=FALSE, echo=TRUE, include = FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Norway)
mynullmodel <- lm(Norway$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include = FALSE}
model <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Norway)
mynullmodel <- lm(Norway$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r}
model1 <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Norway)
new_model <- lm(C ~ CO2_cumulated + jobless + Deaths, data = Norway)
model2 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Norway)
new_model2 <- lm(dC ~ GDP + CO2_cumulated + jobless + Deaths + residents, data=Norway)
```

```{r}
library(sjPlot)
tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Temperature in fonction of different variables", "Temperature reduced model", "Differences of Temperature", "Difference of Temperature reduced model"),
          p.style = "stars",
          file="output.html")
```

We can see that our model is actually really poor, even in terms of coefficients (estimates). That's why we try to look at the linear model of the scaled values for the differential of temperatuer and raw temperatures in order to have something more significant. First, we use a backward selection based on AIC criteria to look at what will be the best model, which variable should be considered. 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include =FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Norway_scale)
mynullmodel <- lm(Norway_scale$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```
```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model10 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Norway_scale)
mynullmodel <- lm(Norway_scale$C~1)
step(model10, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r}
model1_scale <- lm(C ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Norway_scale)
new_model <- lm(C ~ jobless + Deaths, data = Norway_scale)
model2 <- lm(dC ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Norway_scale)
new_model2 <- lm(dC ~ GDP + CO2_cumulated + jobless + Deaths + residents, data=Norway_scale)
```

```{r, message=FALSE, warning=FALSE}
library(sjPlot)

tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Scaled temperature in fonction of different variables", "Scaled temperature reduced model", "Scaled differences of temperature", "Scaled difference of temperature reduced model"),
          p.style = "stars",
          file="output.html")
```


<font size="3"> We can see that the CO2 depends on the number of unemployed and the number of death according to our model. But in this case, the model is not a precise one, but the variables are significant at a high level. Those variables explain only 32% of the variation of the Co2. This means that 68% of the remaining variation remains unexplained, which is bad. 
Now, we will consider the cumulated CO2 based on our model.We already saw that the relationship between cumulated CO2 and temerature was far better than with CO2. Now, we want to identify which variable explain the increase in CO2 emission, still using the backward selection.
In this case, it adds the population to the remaining significant variables in comparisons with CO2. The model is good, and it 97% of the variation of the CO2 cumulated are explain by our model.This mean that the cumulated CO2 can be explained by the unemployment, the number of deaths and the number of inhabitants. The variable unemployed is not significant if we apply a confidence level of 5% or less, so it could be eliminated, but at what cost in term of precision ? The cost in term of Rsquared will be really small, so we decided to reduce our model to residents and deaths. What is also interesting in this model, is that there is a positive relationship between cumulated CO2 and deaths. We can interpret this by explaining that a higher pollution of the air can murder some people or increase the risk of deaths. </font>

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Norway)
mynullmodel <- lm(Norway$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```
```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=Norway)
mynullmodel <- lm(Norway$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Norway)
model7 <- lm(CO2 ~ jobless + Deaths, data=Norway)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Norway)
model8 <- lm(CO2_cumulated ~ jobless + Deaths + residents, data=Norway)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Emission relative to variables", "Emissions reduced model", "Cumulative Emissions", "Cumulative Emissions reduced model"),
           p.style = "stars",
          file="output.html")
```

If we look at the coefficients (estimates), we can see the the value are not significant. That's why we now look at the scaled values, if it changes the models and the values. 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Norway_scale)
mynullmodel <- lm(Norway_scale$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```
```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=Norway_scale)
mynullmodel <- lm(Norway_scale$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```
```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Norway_scale)
model7 <- lm(CO2 ~ jobless + Deaths, data=Norway_scale)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Norway_scale)
model8 <- lm(CO2_cumulated ~ jobless + Deaths + residents, data=Norway_scale)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Scaled emission relative to variables", "Scaled emissions reduced model", "Scaled cumulative emissions", "Scaled cumulative emissions reduced model"),
           p.style = "stars",
          file="output.html")
```














### 3.1.2. Brazil
Now, let's consider our second country, the Brazil. The Brazil is a big country that is in a developing phase, with a rising economy and population. 


```{r}
Brazil <- df %>% filter(Countries %in% "Brazil")
Brazil_scale <- Brazil
Brazil_scale[, -c(1,2)] <- scale(Brazil[, -c(1,2)])
library(table1)
table1::label(Brazil$residents) <- "Population"
table1::label(Brazil$GDP) <- "GDP"
table1::label(Brazil$dC) <- "Temperature differential"
table1::label(Brazil$Deaths) <- "Death"
table1::label(Brazil$jobless) <- "Unemployed"
table1::label(Brazil$CO2_cumulated) <- "Cumulated CO2"
table1::table1(~residents + GDP + Deaths + dC + jobless + CO2_cumulated, data = Brazil, overall="Brazil")
```

```{r, warning=FALSE, message=FALSE}
library(plotly())
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = Brazil$dC, visible = TRUE)
fig <- fig %>% add_trace(y = Brazil$C, visible = FALSE)
fig <- fig %>% add_trace(y = Brazil$CO2, visible = FALSE)
fig <- fig %>% add_trace(y = Brazil$CO2_cumulated, visible = FALSE)
fig <- fig %>% add_trace(y = Brazil$residents, visible = FALSE)
fig <- fig %>% add_trace(y = Brazil$Deaths, visible = FALSE)
fig <- fig %>% add_trace(y = Brazil$GDP, visible = FALSE)
fig <- fig %>% add_trace(y = Brazil$jobless, visible = FALSE)

fig <- fig %>% layout(
  title = "Brazilian Box Plot of each variables",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "Differention of Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Cumulated CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE)),
               label = "Population"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE)),
               label = "GDP"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)),
               label = "Unemployment")
            )
          )
        )
)
fig
```

#### 3.1.2.1. Correlation
First, let's look at the correlation in Brazil between the different country. We use the function corrplot in order to create the following icture, which is more aesthetic than raw data, and decided to add the value in the lower part. 
```{r, message=FALSE, warning=FALSE}
library(corrplot)
Brazil <- df %>% filter(Countries %in% "Brazil")
corrplot.mixed(cor(Brazil[,-c(1, 2)]),
               lower = "number", 
               upper = "circle",
               tl.col = "black")
```

As we can see, there is many high correlation in Brazil in comparisons with the Norway. For example, the correlation between CO2 cumulated and population is at 0.99, which is quite amazing. But, we can see that there will be many multicollinearity, due to the high correlation between the variables. Now, let's briefly look at the VIF to have a first impression about multicollinearity and which variable contain the same information. As you can see, the VIF for population and cumulated CO2 is so high that we can not see which variable are below or abvove the threshold. That's why we printed a second table without these variables.

```{r, message=FALSE, warning=FALSE}
model1 <- lm(Brazil$C ~ Brazil$CO2 + Brazil$GDP + Brazil$jobless + Brazil$Deaths  + Brazil$residents)
vif_values1 <- vif(model1)
bar_plot_vif2 <- barplot(vif_values1, main = " Brazil VIF Values 1", horiz = TRUE, col = "steelblue", name=c("CO2", "GD", "Job", "dea", "pop"))
abline(v = 5, lwd = 3, lty = 2)
model <- lm(Brazil$C ~ Brazil$CO2 + Brazil$GDP + Brazil$jobless + Brazil$Deaths)
vif_values <- vif(model)
bar_plot_vif1 <- barplot(vif_values, main = "Brazil VIF Values 2", horiz = TRUE, col = "steelblue", name=c("CO2", "GD", "Job", "dea"))
abline(v = 5, lwd = 3, lty = 2)
```

#### 3.1.2.2. Visualization

```{r, message=FALSE, warning=FALSE}
library(plotly)
ll.smooth1 = loess(Brazil$C~Brazil$Years, span=0.75)
ll.smooth2 = loess(Brazil$CO2~Brazil$Years, span=0.75)
ll.smooth3 = loess(Brazil$dC~Brazil$Years, span=0.75)
ll.smooth4 = loess(Brazil$CO2_cumulated~Brazil$Years, span=0.75)

fig <- plot_ly(Brazil, x =  ~Years, mode="lines", alpha = 0.65)
fig <- fig %>% add_lines(y = predict(ll.smooth1), name = "Temperature", alpha=1)
fig <- fig %>% add_trace(y = ~Brazil$C, name = "Temperature", mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Brazil$CO2, name = "CO2", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth3), name = "dC", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Brazil$dC, name = "dC", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth4), name = "Cumulated CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Brazil$CO2_cumulated, name = "Cumulated CO2", visible = F, mode = "markers")

fig <- fig %>% layout(
  title = "Comparisons of variable based on Timeline",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "ΔTemperatures"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "Cumulated CO2")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth10 = lm(Brazil$residents~Brazil$dC, span=0.75)
ll.smooth11 = lm(Brazil$jobless~Brazil$dC, span=0.75)
ll.smooth12 = lm(Brazil$Deaths~Brazil$dC, span=0.75)
ll.smooth13 = lm(Brazil$GDP~Brazil$dC, span=0.75)

fig <- plot_ly(Brazil, x =  ~Brazil$dC, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth10), name = "Population", alpha=1)
fig <- fig %>% add_trace(y = ~Brazil$residents, name = "Population", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth11), name = "Number of unemployed people", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Brazil$jobless, name = "Number of unemployed people", visible = F, mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth12), name = "Number of deaths", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Brazil$Deaths, name = "Number of deaths", mode = "markers", visible = F)
fig <- fig %>% add_trace(y = predict(ll.smooth13), name = "GDP", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Brazil$GDP, name = "GDP", mode = "markers", visible = F)
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Brazil",
    xaxis = list(domain = c(0.1, 1), title = "Difference of Temperature in Brazil"),
    yaxis = list(title = "variable"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Population"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Unemployed"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "GDP")
            )
          )
        )
)
fig
```
```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Brazil$C~Brazil$CO2, span=0.75)
ll.smooth2 = lm(Brazil$dC~Brazil$CO2, span=0.75)
fig <- plot_ly(Brazil, x =  ~Brazil$CO2, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Brazil$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Brazil$dC, name = "Differences of temperatures in Brazil", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Brazil",
    xaxis = list(domain = c(0.1, 1), title = "CO2 emission in Brazil"),
    yaxis = list(title = "°C"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```
```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Brazil$C~Brazil$CO2_cumulated, span=0.75)
ll.smooth2 = lm(Brazil$dC~Brazil$CO2_cumulated, span=0.75)
fig <- plot_ly(Brazil, x =  ~Brazil$CO2_cumulated, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Brazil$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Brazil$dC, name = "Differences of temperatures", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variaton based on cumulated CO2 in Brazil",
    xaxis = list(domain = c(0.1, 1), title = "Cumulated CO2 emissions of Brazil"),
    yaxis = list(title = "°C"),
  updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

#### 3.1.2.3. Linear Regression Model(s)

```{r, message=FALSE, warning=FALSE, echo=TRUE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Brazil)
mynullmodel <- lm(Brazil$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Brazil)
mynullmodel <- lm(Brazil$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r}
model1 <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Brazil)
new_model <- lm(C ~ CO2 + residents, data = Brazil)
model2 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Brazil)
new_model2 <- lm(dC ~ jobless + residents, data=Brazil)
```

                 
```{r}
library(sjPlot)
tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Temperature in fonction of different variables", "Temperature reduced model", "Differences of Temperature", "Difference of Temperature reduced model"),
          p.style = "stars",
          file="output.html")
```


```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Brazil_scale)
mynullmodel <- lm(Brazil_scale$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model10 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Brazil_scale)
mynullmodel <- lm(Brazil_scale$C~1)
step(model10, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r}
model1_scale <- lm(C ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Brazil_scale)
new_model <- lm(C ~ CO2 + residents, data = Brazil_scale)
model2 <- lm(dC ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Brazil_scale)
new_model2 <- lm(dC ~ jobless + residents, data=Brazil_scale)
```

```{r, message=FALSE, warning=FALSE}
library(sjPlot)

tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Scaled temperature in fonction of different variables", "Scaled temperature reduced model", "Scaled differences of temperature", "Scaled difference of temperature reduced model"),
          p.style = "stars",
          file="output.html")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Brazil)
mynullmodel <- lm(Brazil$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=Brazil)
mynullmodel <- lm(Brazil$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Brazil)
model7 <- lm(CO2 ~ Deaths + residents, data=Brazil)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Brazil)
model8 <- lm(CO2_cumulated ~ GDP + Deaths + residents, data=Brazil)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Emission relative to variables", "Emissions reduced model", "Cumulative Emissions", "Cumulative Emissions reduced model"),
           p.style = "stars",
          file="output.html")
```



```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Brazil_scale)
mynullmodel <- lm(Brazil_scale$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=Brazil_scale)
mynullmodel <- lm(Brazil_scale$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Brazil_scale)
model7 <- lm(CO2 ~ Deaths + residents, data=Brazil_scale)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Brazil_scale)
model8 <- lm(CO2_cumulated ~ GDP + Deaths + residents, data=Brazil_scale)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Scaled emission relative to variables", "Scaled emissions reduced model", "Scaled cumulative emissions", "Scaled cumulative emissions reduced model"),
           p.style = "stars",
          file="output.html")
```









### 3.1.3. Canada

```{r, fig.align = 'center'}
Canada <- df %>% filter(Countries %in% "Canada")
Canada_scale <- Canada
Canada_scale[, -c(1,2)] <- scale(Canada[, -c(1,2)])
library(table1)
table1::label(Canada$residents) <- "Population"
table1::label(Canada$GDP) <- "GDP"
table1::label(Canada$dC) <- "Temperature differential"
table1::label(Canada$Deaths) <- "Death"
table1::label(Canada$jobless) <- "Unemployed"
table1::label(Canada$CO2_cumulated) <- "Cumulated CO2"
table1::table1(~residents + GDP + Deaths + dC + jobless + CO2_cumulated, data = Canada, overall="Canada")
```

```{r, warning=FALSE, message=FALSE}
library(plotly())
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = Canada$dC, visible = TRUE)
fig <- fig %>% add_trace(y = Canada$C, visible = FALSE)
fig <- fig %>% add_trace(y = Canada$CO2, visible = FALSE)
fig <- fig %>% add_trace(y = Canada$CO2_cumulated, visible = FALSE)
fig <- fig %>% add_trace(y = Canada$residents, visible = FALSE)
fig <- fig %>% add_trace(y = Canada$Deaths, visible = FALSE)
fig <- fig %>% add_trace(y = Canada$GDP, visible = FALSE)
fig <- fig %>% add_trace(y = Canada$jobless, visible = FALSE)

fig <- fig %>% layout(
  title = "Canadian Box Plot of each variables",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "Differention of Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Cumulated CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE)),
               label = "Population"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE)),
               label = "GDP"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)),
               label = "Unemployment")
            )
          )
        )
)
fig
```

#### 3.1.3.1. Correlation
```{r, message=FALSE, warning=FALSE}
corrplot.mixed(cor(Brazil[,-c(1, 2)]),
               lower = "number", 
               upper = "circle",
               tl.col = "black")
```

```{r, message=FALSE, warning=FALSE}
model1 <- lm(Canada$C ~ Canada$CO2 + Canada$GDP + Canada$jobless + Canada$Deaths  + Canada$residents)
vif_values1 <- vif(model1)
bar_plot_vif2 <- barplot(vif_values1, main = " Canada VIF Values 1", horiz = TRUE, col = "steelblue", name=c("CO2", "GD", "Job", "dea", "pop"))
abline(v = 5, lwd = 3, lty = 2)
```

#### 3.1.3.2. Visualization
```{r, message=FALSE, warning=FALSE}
ll.smooth1 = loess(Canada$C~Canada$Years, span=0.75)
ll.smooth2 = loess(Canada$CO2~Canada$Years, span=0.75)
ll.smooth3 = loess(Canada$dC~Canada$Years, span=0.75)
ll.smooth4 = loess(Canada$CO2_cumulated~Canada$Years, span=0.75)

fig <- plot_ly(Canada, x =  ~Years, mode="lines", alpha = 0.65)
fig <- fig %>% add_lines(y = predict(ll.smooth1), name = "Temperature", alpha=1)
fig <- fig %>% add_trace(y = ~Canada$C, name = "Temperature", mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Canada$CO2, name = "CO2", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth3), name = "dC", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Canada$dC, name = "dC", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth4), name = "Cumulated CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Canada$CO2_cumulated, name = "Cumulated CO2", visible = F, mode = "markers")

fig <- fig %>% layout(
  title = "Comparisons of variable based on Timeline",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "ΔTemperatures"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "Cumulated CO2")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth10 = lm(Canada$residents~Canada$dC, span=0.75)
ll.smooth11 = lm(Canada$jobless~Canada$dC, span=0.75)
ll.smooth12 = lm(Canada$Deaths~Canada$dC, span=0.75)
ll.smooth13 = lm(Canada$GDP~Canada$dC, span=0.75)

fig <- plot_ly(Canada, x =  ~Canada$dC, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth10), name = "Population", alpha=1)
fig <- fig %>% add_trace(y = ~Canada$residents, name = "Population", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth11), name = "Number of unemployed people", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Canada$jobless, name = "Number of unemployed people", visible = F, mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth12), name = "Number of deaths", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Canada$Deaths, name = "Number of deaths", mode = "markers", visible = F)
fig <- fig %>% add_trace(y = predict(ll.smooth13), name = "GDP", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Canada$GDP, name = "GDP", mode = "markers", visible = F)
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Canada",
    xaxis = list(domain = c(0.1, 1), title = "Difference of Temperature in Canada"),
    yaxis = list(title = "variable"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Population"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Unemployed"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "GDP")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Canada$C~Canada$CO2, span=0.75)
ll.smooth2 = lm(Canada$dC~Canada$CO2, span=0.75)
fig <- plot_ly(Canada, x =  ~Canada$CO2, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Canada$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Canada$dC, name = "Differences of temperatures in Canada", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Canada",
    xaxis = list(domain = c(0.1, 1), title = "CO2 emission in Canada"),
    yaxis = list(title = "°C"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Canada$C~Canada$CO2_cumulated, span=0.75)
ll.smooth2 = lm(Canada$dC~Canada$CO2_cumulated, span=0.75)
fig <- plot_ly(Canada, x =  ~Canada$CO2_cumulated, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Canada$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Canada$dC, name = "Differences of temperatures", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variaton based on cumulated CO2 in Canada",
    xaxis = list(domain = c(0.1, 1), title = "Cumulated CO2 emissions of Canada"),
    yaxis = list(title = "°C"),
  updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```


####3.1.3.3. Linear Regression Model(s)

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Canada)
mynullmodel <- lm(Canada$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Canada)
mynullmodel <- lm(Canada$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r}
model1 <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Canada)
new_model <- lm(C ~residents, data = Canada)
model2 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Canada)
new_model2 <- lm(dC ~ CO2_cumulated + jobless + Deaths, data=Canada)
```

```{r}
library(sjPlot)
tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Temperature in fonction of different variables", "Temperature reduced model", "Differences of Temperature", "Difference of Temperature reduced model"),
          p.style = "stars",
          file="output.html")
```

 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Canada_scale)
mynullmodel <- lm(Canada_scale$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model10 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Canada_scale)
mynullmodel <- lm(Canada_scale$C~1)
step(model10, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r}
model1_scale <- lm(C ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Canada_scale)
new_model <- lm(C ~ residents, data = Canada_scale)
model2 <- lm(dC ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Canada_scale)
new_model2 <- lm(dC ~ CO2_cumulated + jobless + Deaths, data=Canada_scale)
```

```{r, message=FALSE, warning=FALSE}
library(sjPlot)

tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Scaled temperature in fonction of different variables", "Scaled temperature reduced model", "Scaled differences of temperature", "Scaled difference of temperature reduced model"),
          p.style = "stars",
          file="output.html")
```




```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Canada)
mynullmodel <- lm(Canada$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ jobless + Deaths + residents, data=Canada)
mynullmodel <- lm(Canada$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Canada)
model7 <- lm(CO2 ~ jobless + Deaths, data=Canada)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Canada)
model8 <- lm(CO2_cumulated ~ Deaths + residents, data=Canada)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Emission relative to variables", "Emissions reduced model", "Cumulative Emissions", "Cumulative Emissions reduced model"),
           p.style = "stars",
          file="output.html")
```

If we look at the coefficients (estimates), we can see the the value are not significant. That's why we now look at the scaled values, if it changes the models and the values. 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Canada_scale)
mynullmodel <- lm(Canada_scale$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=Canada_scale)
mynullmodel <- lm(Canada_scale$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Canada_scale)
model7 <- lm(CO2 ~ jobless + Deaths + residents, data=Canada_scale)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Canada_scale)
model8 <- lm(CO2_cumulated ~ GDP + Deaths + residents, data=Canada_scale)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Scaled emission relative to variables", "Scaled emissions reduced model", "Scaled cumulative emissions", "Scaled cumulative emissions reduced model"),
           p.style = "stars",
          file="output.html")
```












### 3.1.4. South Africa

```{r}
South_Africa <- df %>% filter(Countries %in% "South Africa")
South_Africa_scale <- South_Africa
South_Africa_scale[, -c(1,2)] <- scale(South_Africa[, -c(1,2)])
table1::label(South_Africa$residents) <- "Population"
table1::label(South_Africa$GDP) <- "GDP"
table1::label(South_Africa$dC) <- "Temperature differential"
table1::label(South_Africa$Deaths) <- "Death"
table1::label(South_Africa$jobless) <- "Unemployed"
table1::label(South_Africa$CO2_cumulated) <- "Cumulated CO2"
table1::table1(~residents + GDP + Deaths + dC + jobless + CO2_cumulated, data = South_Africa, overall="South Africa")
```

```{r, warning=FALSE, message=FALSE}
library(plotly())
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = South_Africa$dC, visible = TRUE)
fig <- fig %>% add_trace(y = South_Africa$C, visible = FALSE)
fig <- fig %>% add_trace(y = South_Africa$CO2, visible = FALSE)
fig <- fig %>% add_trace(y = South_Africa$CO2_cumulated, visible = FALSE)
fig <- fig %>% add_trace(y = South_Africa$residents, visible = FALSE)
fig <- fig %>% add_trace(y = South_Africa$Deaths, visible = FALSE)
fig <- fig %>% add_trace(y = South_Africa$GDP, visible = FALSE)
fig <- fig %>% add_trace(y = South_Africa$jobless, visible = FALSE)

fig <- fig %>% layout(
  title = "South African Box Plot of each variables",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "Differention of Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Cumulated CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE)),
               label = "Population"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE)),
               label = "GDP"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)),
               label = "Unemployment")
            )
          )
        )
)
fig
```

#### 3.1.4.1. Correlation

```{r, message=FALSE, warning=FALSE}
corrplot.mixed(cor(South_Africa[,-c(1, 2)]),
               lower = "number", 
               upper = "circle",
               tl.col = "black")
```
```{r, message=FALSE, warning=FALSE}
model1 <- lm(South_Africa$C ~ South_Africa$CO2 + South_Africa$GDP + South_Africa$jobless + South_Africa$Deaths  + South_Africa$residents)
vif_values1 <- vif(model1)
bar_plot_vif2 <- barplot(vif_values1, main = " South Africa VIF Values 1", horiz = TRUE, col = "steelblue", name=c("CO2", "GD", "Job", "dea", "pop"))
abline(v = 5, lwd = 3, lty = 2)
```

#### 3.1.4.2. Visualization

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = loess(South_Africa$C~South_Africa$Years, span=0.75)
ll.smooth2 = loess(South_Africa$CO2~South_Africa$Years, span=0.75)
ll.smooth3 = loess(South_Africa$dC~South_Africa$Years, span=0.75)
ll.smooth4 = loess(South_Africa$CO2_cumulated~South_Africa$Years, span=0.75)

fig <- plot_ly(South_Africa, x =  ~Years, mode="lines", alpha = 0.65)
fig <- fig %>% add_lines(y = predict(ll.smooth1), name = "Temperature", alpha=1)
fig <- fig %>% add_trace(y = ~South_Africa$C, name = "Temperature", mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~South_Africa$CO2, name = "CO2", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth3), name = "dC", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~South_Africa$dC, name = "dC", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth4), name = "Cumulated CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~South_Africa$CO2_cumulated, name = "Cumulated CO2", visible = F, mode = "markers")

fig <- fig %>% layout(
  title = "Comparisons of variable based on Timeline",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "ΔTemperatures"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "Cumulated CO2")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth10 = lm(South_Africa$residents~South_Africa$dC, span=0.75)
ll.smooth11 = lm(South_Africa$jobless~South_Africa$dC, span=0.75)
ll.smooth12 = lm(South_Africa$Deaths~South_Africa$dC, span=0.75)
ll.smooth13 = lm(South_Africa$GDP~South_Africa$dC, span=0.75)

fig <- plot_ly(South_Africa, x =  ~South_Africa$dC, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth10), name = "Population", alpha=1)
fig <- fig %>% add_trace(y = ~South_Africa$residents, name = "Population", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth11), name = "Number of unemployed people", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~South_Africa$jobless, name = "Number of unemployed people", visible = F, mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth12), name = "Number of deaths", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~South_Africa$Deaths, name = "Number of deaths", mode = "markers", visible = F)
fig <- fig %>% add_trace(y = predict(ll.smooth13), name = "GDP", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~South_Africa$GDP, name = "GDP", mode = "markers", visible = F)
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in South Africa",
    xaxis = list(domain = c(0.1, 1), title = "Difference of Temperature in South Africa"),
    yaxis = list(title = "variable"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Population"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Unemployed"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "GDP")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(South_Africa$C~South_Africa$CO2, span=0.75)
ll.smooth2 = lm(South_Africa$dC~South_Africa$CO2, span=0.75)
fig <- plot_ly(South_Africa, x =  ~South_Africa$CO2, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~South_Africa$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~South_Africa$dC, name = "Differences of temperatures in South Africa", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in South Africa",
    xaxis = list(domain = c(0.1, 1), title = "CO2 emission in South Africa"),
    yaxis = list(title = "°C"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(South_Africa$C~South_Africa$CO2_cumulated, span=0.75)
ll.smooth2 = lm(South_Africa$dC~South_Africa$CO2_cumulated, span=0.75)
fig <- plot_ly(South_Africa, x =  ~South_Africa$CO2_cumulated, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~South_Africa$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~South_Africa$dC, name = "Differences of temperatures", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variaton based on cumulated CO2 in South Africa",
    xaxis = list(domain = c(0.1, 1), title = "Cumulated CO2 emissions of South Africa"),
    yaxis = list(title = "°C"),
  updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

####3.1.4.3. Linear Regression Model(s)

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=South_Africa)
mynullmodel <- lm(South_Africa$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=South_Africa)
mynullmodel <- lm(South_Africa$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r}
model1 <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=South_Africa)
new_model <- lm(C ~CO2 + CO2_cumulated + Deaths + residents, data = South_Africa)
model2 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=South_Africa)
new_model2 <- lm(dC ~ residents, data=South_Africa)
```

```{r}
library(sjPlot)
tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Temperature in fonction of different variables", "Temperature reduced model", "Differences of Temperature", "Difference of Temperature reduced model"),
          p.style = "stars",
          file="output.html")
```

 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Canada_scale)
mynullmodel <- lm(Canada_scale$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model10 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=South_Africa_scale)
mynullmodel <- lm(South_Africa_scale$C~1)
step(model10, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r}
model1_scale <- lm(C ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=South_Africa_scale)
new_model <- lm(C ~ residents, data = South_Africa_scale)
model2 <- lm(dC ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=South_Africa_scale)
new_model2 <- lm(dC ~ residents, data=South_Africa_scale)
```

```{r, message=FALSE, warning=FALSE}
library(sjPlot)

tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Scaled temperature in fonction of different variables", "Scaled temperature reduced model", "Scaled differences of temperature", "Scaled difference of temperature reduced model"),
          p.style = "stars",
          file="output.html")
```


```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=South_Africa)
mynullmodel <- lm(South_Africa$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ jobless + Deaths + residents, data= South_Africa)
mynullmodel <- lm(South_Africa$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=South_Africa)
model7 <- lm(CO2 ~ GDP + residents, data=South_Africa)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=South_Africa)
model8 <- lm(CO2_cumulated ~ Deaths + residents, data=South_Africa)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Emission relative to variables", "Emissions reduced model", "Cumulative Emissions", "Cumulative Emissions reduced model"),
           p.style = "stars",
          file="output.html")
```

If we look at the coefficients (estimates), we can see the the value are not significant. That's why we now look at the scaled values, if it changes the models and the values. 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=South_Africa_scale)
mynullmodel <- lm(South_Africa_scale$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=South_Africa_scale)
mynullmodel <- lm(South_Africa_scale$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=South_Africa_scale)
model7 <- lm(CO2 ~ GDP + residents, data=South_Africa_scale)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=South_Africa_scale)
model8 <- lm(CO2_cumulated ~ GDP + jobless + residents, data=South_Africa_scale)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Scaled emission relative to variables", "Scaled emissions reduced model", "Scaled cumulative emissions", "Scaled cumulative emissions reduced model"),
           p.style = "stars",
          file="output.html")
```




### 3.1.5. Peru
```{r}
Peru <- df %>% filter(Countries %in% "Peru")
Peru_scale <- Peru
Peru_scale[, -c(1,2)] <- scale(Peru[, -c(1,2)])
table1::label(Peru$residents) <- "Population"
table1::label(Peru$GDP) <- "GDP"
table1::label(Peru$dC) <- "Temperature differential"
table1::label(Peru$Deaths) <- "Death"
table1::label(Peru$jobless) <- "Unemployed"
table1::label(Peru$CO2_cumulated) <- "Cumulated CO2"
table1::table1(~residents + GDP + Deaths + dC + jobless + CO2_cumulated, data = Peru, overall="Peru")
```

```{r, warning=FALSE, message=FALSE}
library(plotly())
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = Peru$dC, visible = TRUE)
fig <- fig %>% add_trace(y = Peru$C, visible = FALSE)
fig <- fig %>% add_trace(y = Peru$CO2, visible = FALSE)
fig <- fig %>% add_trace(y = Peru$CO2_cumulated, visible = FALSE)
fig <- fig %>% add_trace(y = Peru$residents, visible = FALSE)
fig <- fig %>% add_trace(y = Peru$Deaths, visible = FALSE)
fig <- fig %>% add_trace(y = Peru$GDP, visible = FALSE)
fig <- fig %>% add_trace(y = Peru$jobless, visible = FALSE)

fig <- fig %>% layout(
  title = "Peruvian Box Plot of each variables",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "Differention of Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Cumulated CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE)),
               label = "Population"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE)),
               label = "GDP"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)),
               label = "Unemployment")
            )
          )
        )
)
fig
```

#### 3.1.5.1. Correlation
```{r, message=FALSE, warning=FALSE}
corrplot.mixed(cor(Peru[,-c(1, 2)]),
               lower = "number", 
               upper = "circle",
               tl.col = "black")
```
```{r, message=FALSE, warning=FALSE}
model1 <- lm(Peru$C ~ Peru$CO2 + Peru$GDP + Peru$jobless + Peru$Deaths  + Peru$residents)
vif_values1 <- vif(model1)
bar_plot_vif2 <- barplot(vif_values1, main = " Peru VIF Values 1", horiz = TRUE, col = "steelblue", name=c("CO2", "GD", "Job", "dea", "pop"))
abline(v = 5, lwd = 3, lty = 2)
```

#### 3.1.5.2. Visualization
```{r, message=FALSE, warning=FALSE}
ll.smooth1 = loess(Peru$C~Peru$Years, span=0.75)
ll.smooth2 = loess(Peru$CO2~Peru$Years, span=0.75)
ll.smooth3 = loess(Peru$dC~Peru$Years, span=0.75)
ll.smooth4 = loess(Peru$CO2_cumulated~Peru$Years, span=0.75)

fig <- plot_ly(Peru, x =  ~Years, mode="lines", alpha = 0.65)
fig <- fig %>% add_lines(y = predict(ll.smooth1), name = "Temperature", alpha=1)
fig <- fig %>% add_trace(y = ~Peru$C, name = "Temperature", mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Peru$CO2, name = "CO2", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth3), name = "dC", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Peru$dC, name = "dC", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth4), name = "Cumulated CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Peru$CO2_cumulated, name = "Cumulated CO2", visible = F, mode = "markers")

fig <- fig %>% layout(
  title = "Comparisons of variable based on Timeline",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "ΔTemperatures"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "Cumulated CO2")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth10 = lm(Peru$residents~Peru$dC, span=0.75)
ll.smooth11 = lm(Peru$jobless~Peru$dC, span=0.75)
ll.smooth12 = lm(Peru$Deaths~Peru$dC, span=0.75)
ll.smooth13 = lm(Peru$GDP~Peru$dC, span=0.75)

fig <- plot_ly(Peru, x =  ~Peru$dC, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth10), name = "Population", alpha=1)
fig <- fig %>% add_trace(y = ~Peru$residents, name = "Population", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth11), name = "Number of unemployed people", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Peru$jobless, name = "Number of unemployed people", visible = F, mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth12), name = "Number of deaths", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Peru$Deaths, name = "Number of deaths", mode = "markers", visible = F)
fig <- fig %>% add_trace(y = predict(ll.smooth13), name = "GDP", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Peru$GDP, name = "GDP", mode = "markers", visible = F)
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Peru",
    xaxis = list(domain = c(0.1, 1), title = "Difference of Temperature in Peru"),
    yaxis = list(title = "variable"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Population"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Unemployed"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "GDP")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Peru$C~Peru$CO2, span=0.75)
ll.smooth2 = lm(Peru$dC~Peru$CO2, span=0.75)
fig <- plot_ly(Peru, x =  ~Peru$CO2, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Peru$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Peru$dC, name = "Differences of temperatures in South Africa", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Peru",
    xaxis = list(domain = c(0.1, 1), title = "CO2 emission in Peru"),
    yaxis = list(title = "°C"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Peru$C~Peru$CO2_cumulated, span=0.75)
ll.smooth2 = lm(Peru$dC~Peru$CO2_cumulated, span=0.75)
fig <- plot_ly(Peru, x =  ~Peru$CO2_cumulated, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Peru$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Peru$dC, name = "Differences of temperatures", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variaton based on cumulated CO2 in Peru",
    xaxis = list(domain = c(0.1, 1), title = "Cumulated CO2 emissions of Peru"),
    yaxis = list(title = "°C"),
  updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

#### 3.1.5.3. Linear Regression Model(s)

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Peru)
mynullmodel <- lm(Peru$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Peru)
mynullmodel <- lm(Peru$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r}
model1 <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Peru)
new_model <- lm(C ~ GDP + residents, data = Peru)
model2 <- lm(dC ~ CO2 + CO2_cumulated, data=Peru)
new_model2 <- lm(dC ~ CO2 + GDP + jobless + Deaths + residents, data=Peru)
```

```{r}
library(sjPlot)
tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Temperature in fonction of different variables", "Temperature reduced model", "Differences of Temperature", "Difference of Temperature reduced model"),
          p.style = "stars",
          file="output.html")
```

 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Peru_scale)
mynullmodel <- lm(Peru_scale$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model10 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Peru_scale)
mynullmodel <- lm(Peru_scale$C~1)
step(model10, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r}
model1_scale <- lm(C ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Peru_scale)
new_model <- lm(C ~ GDP + residents, data = Peru_scale)
model2 <- lm(dC ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Peru_scale)
new_model2 <- lm(dC ~  CO2 + CO2_cumulated, data=Peru_scale)
```

```{r, message=FALSE, warning=FALSE}
library(sjPlot)

tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Scaled temperature in fonction of different variables", "Scaled temperature reduced model", "Scaled differences of temperature", "Scaled difference of temperature reduced model"),
          p.style = "stars",
          file="output.html")
```




```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Peru)
mynullmodel <- lm(Peru$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ jobless + Deaths + residents, data=Peru)
mynullmodel <- lm(Peru$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Peru)
model7 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Peru)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Peru)
model8 <- lm(CO2_cumulated ~ Deaths + residents, data=Peru)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Emission relative to variables", "Emissions reduced model", "Cumulative Emissions", "Cumulative Emissions reduced model"),
           p.style = "stars",
          file="output.html")
```

If we look at the coefficients (estimates), we can see the the value are not significant. That's why we now look at the scaled values, if it changes the models and the values. 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Peru_scale)
mynullmodel <- lm(Peru_scale$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=Peru_scale)
mynullmodel <- lm(Peru_scale$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Peru_scale)
model7 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Peru_scale)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Peru_scale)
model8 <- lm(CO2_cumulated ~ GDP + jobless + residents, data=Peru_scale)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Scaled emission relative to variables", "Scaled emissions reduced model", "Scaled cumulative emissions", "Scaled cumulative emissions reduced model"),
           p.style = "stars",
          file="output.html")
```



### 3.1.6. Austria
```{r}
Austria <- df %>% filter(Countries %in% "Austria")
Austria_scale <- Austria
Austria_scale[, -c(1,2)] <- scale(Austria[, -c(1,2)])
Austria[is.na(Austria)] = 0
library(table1)
table1::label(Austria$residents) <- "Population"
table1::label(Austria$GDP) <- "GDP"
table1::label(Austria$dC) <- "Temperature differential"
table1::label(Austria$Deaths) <- "Death"
table1::label(Austria$jobless) <- "Unemployed"
table1::label(Austria$CO2_cumulated) <- "Cumulated CO2"
table1::table1(~residents + GDP + Deaths + dC + jobless + CO2_cumulated, data = Austria, overall="Austria")
```

```{r, warning=FALSE, message=FALSE}
library(plotly())
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = Austria$dC, visible = TRUE)
fig <- fig %>% add_trace(y = Austria$C, visible = FALSE)
fig <- fig %>% add_trace(y = Austria$CO2, visible = FALSE)
fig <- fig %>% add_trace(y = Austria$CO2_cumulated, visible = FALSE)
fig <- fig %>% add_trace(y = Austria$residents, visible = FALSE)
fig <- fig %>% add_trace(y = Austria$Deaths, visible = FALSE)
fig <- fig %>% add_trace(y = Austria$GDP, visible = FALSE)
fig <- fig %>% add_trace(y = Austria$jobless, visible = FALSE)

fig <- fig %>% layout(
  title = "Austrian Box Plot of each variables",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "Differention of Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Cumulated CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE)),
               label = "Population"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE)),
               label = "GDP"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)),
               label = "Unemployment")
            )
          )
        )
)
fig
```

#### 3.1.6.1. Correlation
```{r, message=FALSE, warning=FALSE}
corrplot.mixed(cor(Austria[,-c(1, 2)]),
               lower = "number", 
               upper = "circle",
               tl.col = "black")
```
```{r, message=FALSE, warning=FALSE}
model1 <- lm(Austria$C ~ Austria$CO2 + Austria$GDP + Austria$jobless + Austria$Deaths  + Austria$residents)
vif_values1 <- vif(model1)
bar_plot_vif2 <- barplot(vif_values1, main = " Austria VIF Values 1", horiz = TRUE, col = "steelblue", name=c("CO2", "GD", "Job", "dea", "pop"))
abline(v = 5, lwd = 3, lty = 2)
```

#### 3.1.6.2. Visualization
```{r, message=FALSE, warning=FALSE}
ll.smooth15 = loess(Austria$C~Austria$Years, span=0.75)
ll.smooth16 = loess(Austria$CO2~Austria$Years, span=0.75)
ll.smooth17 = loess(Austria$dC~Austria$Years, span=0.75)
ll.smooth18 = loess(Austria$CO2_cumulated~Austria$Years, span=0.75)

fig <- plot_ly(Austria, x =  ~Years, mode="lines", alpha = 0.65)
fig <- fig %>% add_lines(y = predict(ll.smooth15), name = "Temperature", alpha=1)
fig <- fig %>% add_trace(y = ~Austria$C, name = "Temperature", mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth16), name = "CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Austria$CO2, name = "CO2", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth17), name = "dC", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Austria$dC, name = "dC", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth18), name = "Cumulated CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Austria$CO2_cumulated, name = "Cumulated CO2", visible = F, mode = "markers")

fig <- fig %>% layout(
  title = "Comparisons of variable based on Timeline",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "ΔTemperatures"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "Cumulated CO2")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth10 = lm(Austria$residents~Austria$dC, span=0.75)
ll.smooth11 = lm(Austria$jobless~Austria$dC, span=0.75)
ll.smooth12 = lm(Austria$Deaths~Austria$dC, span=0.75)
ll.smooth13 = lm(Austria$GDP~Austria$dC, span=0.75)

fig <- plot_ly(Austria, x =  ~Austria$dC, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth10), name = "Population", alpha=1)
fig <- fig %>% add_trace(y = ~Austria$residents, name = "Population", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth11), name = "Number of unemployed people", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Austria$jobless, name = "Number of unemployed people", visible = F, mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth12), name = "Number of deaths", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Austria$Deaths, name = "Number of deaths", mode = "markers", visible = F)
fig <- fig %>% add_trace(y = predict(ll.smooth13), name = "GDP", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Austria$GDP, name = "GDP", mode = "markers", visible = F)
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Austria",
    xaxis = list(domain = c(0.1, 1), title = "Difference of Temperature in Austria"),
    yaxis = list(title = "variable"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Population"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Unemployed"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "GDP")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Austria$C~Austria$CO2, span=0.75)
ll.smooth2 = lm(Austria$dC~Austria$CO2, span=0.75)
fig <- plot_ly(Austria, x =  ~Austria$CO2, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Austria$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Austria$dC, name = "Differences of temperatures in Austria", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Austria",
    xaxis = list(domain = c(0.1, 1), title = "CO2 emission in Austria"),
    yaxis = list(title = "°C"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Austria$C~Austria$CO2_cumulated, span=0.75)
ll.smooth2 = lm(Austria$dC~Austria$CO2_cumulated, span=0.75)
fig <- plot_ly(Austria, x =  ~Austria$CO2_cumulated, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Austria$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Austria$dC, name = "Differences of temperatures", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variaton based on cumulated CO2 in Austria",
    xaxis = list(domain = c(0.1, 1), title = "Cumulated CO2 emissions of Austria"),
    yaxis = list(title = "°C"),
  updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

#### 3.1.6.3. Linear Regression Model(s)
```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Austria)
mynullmodel <- lm(Austria$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Austria)
mynullmodel <- lm(Austria$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r}
model1 <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Austria)
new_model <- lm(C ~ CO2 + GDP + jobless + Deaths + residents, data = Austria)
model2 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Austria)
new_model2 <- lm(dC ~ CO2 + GDP + jobless + Deaths + residents, data=Austria)
```

```{r}
library(sjPlot)
tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Temperature in fonction of different variables", "Temperature reduced model", "Differences of Temperature", "Difference of Temperature reduced model"),
          p.style = "stars",
          file="output.html")
```

 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Austria_scale)
mynullmodel <- lm(Austria_scale$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model10 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Austria_scale)
mynullmodel <- lm(Austria_scale$C~1)
step(model10, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r}
model1_scale <- lm(C ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Austria_scale)
new_model <- lm(C ~ CO2 + GDP + jobless + Deaths + residents, data = Austria_scale)
model2 <- lm(dC ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Austria_scale)
new_model2 <- lm(dC ~ CO2 + GDP + jobless + Deaths + residents, data=Austria_scale)
```

```{r, message=FALSE, warning=FALSE}
library(sjPlot)

tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Scaled temperature in fonction of different variables", "Scaled temperature reduced model", "Scaled differences of temperature", "Scaled difference of temperature reduced model"),
          p.style = "stars",
          file="output.html")
```




```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Austria)
mynullmodel <- lm(Austria$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ jobless + Deaths + residents, data=Austria)
mynullmodel <- lm(Austria$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Austria)
model7 <- lm(CO2 ~ GDP + Deaths + residents, data=Austria)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Austria)
model8 <- lm(CO2_cumulated ~ jobless + Deaths + residents, data=Austria)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Emission relative to variables", "Emissions reduced model", "Cumulative Emissions", "Cumulative Emissions reduced model"),
           p.style = "stars",
          file="output.html")
```

If we look at the coefficients (estimates), we can see the the value are not significant. That's why we now look at the scaled values, if it changes the models and the values. 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Austria_scale)
mynullmodel <- lm(Austria_scale$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=Austria_scale)
mynullmodel <- lm(Austria_scale$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Canada_scale)
model7 <- lm(CO2 ~ GDP + Deaths + residents, data=Canada_scale)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Canada_scale)
model8 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=Canada_scale)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Scaled emission relative to variables", "Scaled emissions reduced model", "Scaled cumulative emissions", "Scaled cumulative emissions reduced model"),
           p.style = "stars",
          file="output.html")
```








### 3.1.7. Thailand
```{r}
Thailand <- df %>% filter(Countries %in% "Thailand")
Thailand_scale <- Thailand
Thailand_scale[, -c(1,2)] <- scale(Thailand[, -c(1,2)])
table1::label(Thailand$residents) <- "Population"
table1::label(Thailand$GDP) <- "GDP"
table1::label(Thailand$dC) <- "Temperature differential"
table1::label(Thailand$Deaths) <- "Death"
table1::label(Thailand$jobless) <- "Unemployed"
table1::label(Thailand$CO2_cumulated) <- "Cumulated CO2"
table1::table1(~residents + GDP + Deaths + dC + jobless + CO2_cumulated, data = Thailand, overall="Thailand")
```

```{r, warning=FALSE, message=FALSE}
library(plotly())
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = Thailand$dC, visible = TRUE)
fig <- fig %>% add_trace(y = Thailand$C, visible = FALSE)
fig <- fig %>% add_trace(y = Thailand$CO2, visible = FALSE)
fig <- fig %>% add_trace(y = Thailand$CO2_cumulated, visible = FALSE)
fig <- fig %>% add_trace(y = Thailand$residents, visible = FALSE)
fig <- fig %>% add_trace(y = Thailand$Deaths, visible = FALSE)
fig <- fig %>% add_trace(y = Thailand$GDP, visible = FALSE)
fig <- fig %>% add_trace(y = Thailand$jobless, visible = FALSE)

fig <- fig %>% layout(
  title = "Thailandese Box Plot of each variables",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "Differention of Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Cumulated CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE)),
               label = "Population"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE)),
               label = "GDP"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)),
               label = "Unemployment")
            )
          )
        )
)
fig
```

#### 3.1.7.1. Correlation
```{r, message=FALSE, warning=FALSE}
corrplot.mixed(cor(Thailand[,-c(1, 2)]),
               lower = "number", 
               upper = "circle",
               tl.col = "black")
```
```{r, message=FALSE, warning=FALSE}
model1 <- lm(Thailand$C ~ Thailand$CO2 + Thailand$GDP + Thailand$jobless + Thailand$Deaths  + Thailand$residents)
vif_values1 <- vif(model1)
bar_plot_vif2 <- barplot(vif_values1, main = " Thailand VIF Values 1", horiz = TRUE, col = "steelblue", name=c("CO2", "GD", "Job", "dea", "pop"))
abline(v = 5, lwd = 3, lty = 2)
```

#### 3.1.7.2. Visualization
```{r, message=FALSE, warning=FALSE}
ll.smooth1 = loess(Thailand$C~Thailand$Years, span=0.75)
ll.smooth2 = loess(Thailand$CO2~Thailand$Years, span=0.75)
ll.smooth3 = loess(Thailand$dC~Thailand$Years, span=0.75)
ll.smooth4 = loess(Thailand$CO2_cumulated~Thailand$Years, span=0.75)

fig <- plot_ly(Thailand, x =  ~Years, mode="lines", alpha = 0.65)
fig <- fig %>% add_lines(y = predict(ll.smooth1), name = "Temperature", alpha=1)
fig <- fig %>% add_trace(y = ~Thailand$C, name = "Temperature", mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Thailand$CO2, name = "CO2", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth3), name = "dC", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Thailand$dC, name = "dC", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth4), name = "Cumulated CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Thailand$CO2_cumulated, name = "Cumulated CO2", visible = F, mode = "markers")

fig <- fig %>% layout(
  title = "Comparisons of variable based on Timeline",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "ΔTemperatures"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "Cumulated CO2")
            )
          )
        )
)
fig
```


```{r, message=FALSE, warning=FALSE}
ll.smooth10 = lm(Thailand$residents~Thailand$dC, span=0.75)
ll.smooth11 = lm(Thailand$jobless~Thailand$dC, span=0.75)
ll.smooth12 = lm(Thailand$Deaths~Thailand$dC, span=0.75)
ll.smooth13 = lm(Thailand$GDP~Thailand$dC, span=0.75)

fig <- plot_ly(Thailand, x =  ~Thailand$dC, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth10), name = "Population", alpha=1)
fig <- fig %>% add_trace(y = ~Thailand$residents, name = "Population", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth11), name = "Number of unemployed people", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Thailand$jobless, name = "Number of unemployed people", visible = F, mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth12), name = "Number of deaths", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Thailand$Deaths, name = "Number of deaths", mode = "markers", visible = F)
fig <- fig %>% add_trace(y = predict(ll.smooth13), name = "GDP", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Thailand$GDP, name = "GDP", mode = "markers", visible = F)
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Thailand",
    xaxis = list(domain = c(0.1, 1), title = "Difference of Temperature in Thailand"),
    yaxis = list(title = "variable"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Population"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Unemployed"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "GDP")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Thailand$C~Thailand$CO2, span=0.75)
ll.smooth2 = lm(Thailand$dC~Thailand$CO2, span=0.75)
fig <- plot_ly(Thailand, x =  ~Thailand$CO2, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Thailand$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Thailand$dC, name = "Differences of temperatures in Thailand", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Thailand",
    xaxis = list(domain = c(0.1, 1), title = "CO2 emission in Thailand"),
    yaxis = list(title = "°C"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Thailand$C~Thailand$CO2_cumulated, span=0.75)
ll.smooth2 = lm(Thailand$dC~Thailand$CO2_cumulated, span=0.75)
fig <- plot_ly(Thailand, x =  ~Thailand$CO2_cumulated, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Thailand$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Thailand$dC, name = "Differences of temperatures", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variaton based on cumulated CO2 in Thailand",
    xaxis = list(domain = c(0.1, 1), title = "Cumulated CO2 emissions of Thailand"),
    yaxis = list(title = "°C"),
  updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

#### 3.1.7.3. Linear Regression Model(s)
```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Thailand)
mynullmodel <- lm(Thailand$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Thailand)
mynullmodel <- lm(Thailand$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r}
model1 <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Thailand)
new_model <- lm(C ~ GDP + CO2_cumulated, data = Thailand)
model2 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Thailand)
new_model2 <- lm(dC ~ CO2 + jobless, data=Thailand)
```

```{r}
library(sjPlot)
tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Temperature in fonction of different variables", "Temperature reduced model", "Differences of Temperature", "Difference of Temperature reduced model"),
          p.style = "stars",
          file="output.html")
```

 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Thailand_scale)
mynullmodel <- lm(Thailand_scale$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model10 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Thailand_scale)
mynullmodel <- lm(Thailand_scale$C~1)
step(model10, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r}
model1_scale <- lm(C ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Thailand_scale)
new_model <- lm(C ~GDP + CO2_cumulated, data = Thailand_scale)
model2 <- lm(dC ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Thailand_scale)
new_model2 <- lm(dC ~ CO2 + jobless, data=Thailand_scale)
```

```{r, message=FALSE, warning=FALSE}
library(sjPlot)

tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Scaled temperature in fonction of different variables", "Scaled temperature reduced model", "Scaled differences of temperature", "Scaled difference of temperature reduced model"),
          p.style = "stars",
          file="output.html")
```




```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Thailand)
mynullmodel <- lm(Thailand$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ jobless + Deaths + residents, data=Thailand)
mynullmodel <- lm(Thailand$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Thailand)
model7 <- lm(CO2 ~ jobless + Deaths + residents, data=Thailand)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Thailand)
model8 <- lm(CO2_cumulated ~ Deaths + residents, data=Thailand)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Emission relative to variables", "Emissions reduced model", "Cumulative Emissions", "Cumulative Emissions reduced model"),
           p.style = "stars",
          file="output.html")
```

If we look at the coefficients (estimates), we can see the the value are not significant. That's why we now look at the scaled values, if it changes the models and the values. 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Thailand_scale)
mynullmodel <- lm(Thailand_scale$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=Thailand_scale)
mynullmodel <- lm(Thailand_scale$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Thailand_scale)
model7 <- lm(CO2 ~ jobless + Deaths + residents, data=Thailand_scale)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Thailand_scale)
model8 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=Thailand_scale)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Scaled emission relative to variables", "Scaled emissions reduced model", "Scaled cumulative emissions", "Scaled cumulative emissions reduced model"),
           p.style = "stars",
          file="output.html")
```



### 3.1.8. Australia
```{r}
Australia <- df %>% filter(Countries %in% "Australia")
Australia_scale <- Australia
Australia_scale[, -c(1,2)] <- scale(Australia[, -c(1,2)])
table1::label(Australia$residents) <- "Population"
table1::label(Australia$GDP) <- "GDP"
table1::label(Australia$dC) <- "Temperature differential"
table1::label(Australia$Deaths) <- "Death"
table1::label(Australia$jobless) <- "Unemployed"
table1::label(Australia$CO2_cumulated) <- "Cumulated CO2"
table1::table1(~residents + GDP + Deaths + dC + jobless + CO2_cumulated, data = Australia, overall="Australia")
```

```{r, warning=FALSE, message=FALSE}
library(plotly())
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = Australia$dC, visible = TRUE)
fig <- fig %>% add_trace(y = Australia$C, visible = FALSE)
fig <- fig %>% add_trace(y = Australia$CO2, visible = FALSE)
fig <- fig %>% add_trace(y = Australia$CO2_cumulated, visible = FALSE)
fig <- fig %>% add_trace(y = Australia$residents, visible = FALSE)
fig <- fig %>% add_trace(y = Australia$Deaths, visible = FALSE)
fig <- fig %>% add_trace(y = Australia$GDP, visible = FALSE)
fig <- fig %>% add_trace(y = Australia$jobless, visible = FALSE)

fig <- fig %>% layout(
  title = "Australian Box Plot of each variables",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "Differention of Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Cumulated CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE)),
               label = "Population"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE)),
               label = "GDP"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)),
               label = "Unemployment")
            )
          )
        )
)
fig
```

#### 3.1.8.1. Correlation
```{r, message=FALSE, warning=FALSE}
corrplot.mixed(cor(Australia[,-c(1, 2)]),
               lower = "number", 
               upper = "circle",
               tl.col = "black")
```
```{r, message=FALSE, warning=FALSE}
model1 <-lm(Australia$C ~ Australia$CO2 + Australia$GDP + Australia$jobless + Australia$Deaths  + Australia$residents)
vif_values1 <- vif(model1)
bar_plot_vif2 <- barplot(vif_values1, main = " Australia VIF Values 1", horiz = TRUE, col = "steelblue", name=c("CO2", "GD", "Job", "dea", "pop"))
abline(v = 5, lwd = 3, lty = 2)
```

#### 3.1.8.2. Visualization
```{r, message=FALSE, warning=FALSE}
ll.smooth1 = loess(Australia$C~Australia$Years, span=0.75)
ll.smooth2 = loess(Australia$CO2~Australia$Years, span=0.75)
ll.smooth3 = loess(Australia$dC~Australia$Years, span=0.75)
ll.smooth4 = loess(Australia$CO2_cumulated~Australia$Years, span=0.75)

fig <- plot_ly(Australia, x =  ~Years, mode="lines", alpha = 0.65)
fig <- fig %>% add_lines(y = predict(ll.smooth1), name = "Temperature", alpha=1)
fig <- fig %>% add_trace(y = ~Australia$C, name = "Temperature", mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Australia$CO2, name = "CO2", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth3), name = "dC", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Australia$dC, name = "dC", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth4), name = "Cumulated CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Australia$CO2_cumulated, name = "Cumulated CO2", visible = F, mode = "markers")

fig <- fig %>% layout(
  title = "Comparisons of variable based on Timeline",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "ΔTemperatures"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "Cumulated CO2")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth10 = lm(Australia$residents~Australia$dC, span=0.75)
ll.smooth11 = lm(Australia$jobless~Australia$dC, span=0.75)
ll.smooth12 = lm(Australia$Deaths~Australia$dC, span=0.75)
ll.smooth13 = lm(Australia$GDP~Australia$dC, span=0.75)

fig <- plot_ly(Australia, x =  ~Australia$dC, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth10), name = "Population", alpha=1)
fig <- fig %>% add_trace(y = ~Australia$residents, name = "Population", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth11), name = "Number of unemployed people", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Australia$jobless, name = "Number of unemployed people", visible = F, mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth12), name = "Number of deaths", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Australia$Deaths, name = "Number of deaths", mode = "markers", visible = F)
fig <- fig %>% add_trace(y = predict(ll.smooth13), name = "GDP", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Australia$GDP, name = "GDP", mode = "markers", visible = F)
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Australia",
    xaxis = list(domain = c(0.1, 1), title = "Difference of Temperature in Australia"),
    yaxis = list(title = "variable"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Population"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Unemployed"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "GDP")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Australia$C~Australia$CO2, span=0.75)
ll.smooth2 = lm(Australia$dC~Australia$CO2, span=0.75)
fig <- plot_ly(Australia, x =  ~Australia$CO2, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Australia$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Australia$dC, name = "Differences of temperatures in Australia", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Australia",
    xaxis = list(domain = c(0.1, 1), title = "CO2 emission in Australia"),
    yaxis = list(title = "°C"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Australia$C~Australia$CO2_cumulated, span=0.75)
ll.smooth2 = lm(Australia$dC~Australia$CO2_cumulated, span=0.75)
fig <- plot_ly(Australia, x =  ~Australia$CO2_cumulated, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Australia$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Australia$dC, name = "Differences of temperatures", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variaton based on cumulated CO2 in Australia",
    xaxis = list(domain = c(0.1, 1), title = "Cumulated CO2 emissions of Australia"),
    yaxis = list(title = "°C"),
  updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

#### 3.1.8.3. Linear Regression Model(s)

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Australia)
mynullmodel <- lm(Australia$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Australia)
mynullmodel <- lm(Australia$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r}
model1 <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Australia)
new_model <- lm(C ~ CO2 + residents, data = Australia)
model2 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Australia)
new_model2 <- lm(dC ~ Deaths + residents, data = Australia)
```

```{r}
library(sjPlot)
tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Temperature in fonction of different variables", "Temperature reduced model", "Differences of Temperature", "Difference of Temperature reduced model"),
          p.style = "stars",
          file="output.html")
```

 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Australia_scale)
mynullmodel <- lm(Australia_scale$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model10 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Australia_scale)
mynullmodel <- lm(Australia_scale$C~1)
step(model10, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r}
model1_scale <- lm(C ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Australia_scale)
new_model <- lm(C ~CO2 + residents, data = Australia_scale)
model2 <- lm(dC ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Australia_scale)
new_model2 <- lm(dC ~ Deaths + residents, data=Australia_scale)
```

```{r, message=FALSE, warning=FALSE}
library(sjPlot)

tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Scaled temperature in fonction of different variables", "Scaled temperature reduced model", "Scaled differences of temperature", "Scaled difference of temperature reduced model"),
          p.style = "stars",
          file="output.html")
```




```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Australia)
mynullmodel <- lm(Australia$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ jobless + Deaths + residents, data=Australia)
mynullmodel <- lm(Australia$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Australia)
model7 <- lm(CO2 ~ GDP + Deaths + residents, data = Australia)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Australia)
model8 <- lm(CO2_cumulated ~ residents, data = Australia)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Emission relative to variables", "Emissions reduced model", "Cumulative Emissions", "Cumulative Emissions reduced model"),
           p.style = "stars",
          file="output.html")
```

If we look at the coefficients (estimates), we can see the the value are not significant. That's why we now look at the scaled values, if it changes the models and the values. 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Australia_scale)
mynullmodel <- lm(Australia_scale$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=Australia_scale)
mynullmodel <- lm(Australia_scale$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Australia_scale)
model7 <- lm(CO2 ~ GDP + Deaths + residents, data = Australia_scale)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Australia_scale)
model8 <- lm(CO2_cumulated ~  GDP + jobless + residents, data = Australia_scale)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Scaled emission relative to variables", "Scaled emissions reduced model", "Scaled cumulative emissions", "Scaled cumulative emissions reduced model"),
           p.style = "stars",
          file="output.html")
```

### 3.1.9. Argentina

```{r}
Argentina <- df %>% filter(Countries %in% "Argentina")
Argentina_scale <- Argentina
Argentina_scale[, -c(1,2)] <- scale(Argentina[, -c(1,2)])
table1::label(Argentina$residents) <- "Population"
table1::label(Argentina$GDP) <- "GDP"
table1::label(Argentina$dC) <- "Temperature differential"
table1::label(Argentina$Deaths) <- "Death"
table1::label(Argentina$jobless) <- "Unemployed"
table1::label(Argentina$CO2_cumulated) <- "Cumulated CO2"
table1::table1(~residents + GDP + Deaths + dC + jobless + CO2_cumulated, data = Argentina, overall="Argentina")
```

```{r, warning=FALSE, message=FALSE}
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = Argentina$dC, visible = TRUE)
fig <- fig %>% add_trace(y = Argentina$C, visible = FALSE)
fig <- fig %>% add_trace(y = Argentina$CO2, visible = FALSE)
fig <- fig %>% add_trace(y = Argentina$CO2_cumulated, visible = FALSE)
fig <- fig %>% add_trace(y = Argentina$residents, visible = FALSE)
fig <- fig %>% add_trace(y = Argentina$Deaths, visible = FALSE)
fig <- fig %>% add_trace(y = Argentina$GDP, visible = FALSE)
fig <- fig %>% add_trace(y = Argentina$jobless, visible = FALSE)

fig <- fig %>% layout(
  title = "Argetina's Box Plot of each variables",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "Differention of Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Cumulated CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE)),
               label = "Population"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE)),
               label = "GDP"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)),
               label = "Unemployment")
            )
          )
        )
)
fig
```

#### 3.1.9.1. Correlation
```{r, message=FALSE, warning=FALSE}
corrplot.mixed(cor(Argentina[,-c(1, 2)]),
               lower = "number", 
               upper = "circle",
               tl.col = "black")
```

```{r, message=FALSE, warning=FALSE}
model1 <- lm(Argentina$C ~ Argentina$CO2 + Argentina$GDP + Argentina$jobless + Argentina$Deaths  + Argentina$residents)
vif_values1 <- vif(model1)
bar_plot_vif2 <- barplot(vif_values1, main = " Argentina VIF Values 1", horiz = TRUE, col = "steelblue", name=c("CO2", "GD", "Job", "dea", "pop"))
abline(v = 5, lwd = 3, lty = 2)
```


#### 3.1.9.2. Visualization
```{r, message=FALSE, warning=FALSE}
ll.smooth1 = loess(Argentina$C~Argentina$Years, span=0.75)
ll.smooth2 = loess(Argentina$CO2~Argentina$Years, span=0.75)
ll.smooth3 = loess(Argentina$dC~Argentina$Years, span=0.75)
ll.smooth4 = loess(Argentina$CO2_cumulated~Argentina$Years, span=0.75)

fig <- plot_ly(Argentina, x =  ~Years, mode="lines", alpha = 0.65)
fig <- fig %>% add_lines(y = predict(ll.smooth1), name = "Temperature", alpha=1)
fig <- fig %>% add_trace(y = ~Argentina$C, name = "Temperature", mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Argentina$CO2, name = "CO2", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth3), name = "dC", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Argentina$dC, name = "dC", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth4), name = "Cumulated CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Argentina$CO2_cumulated, name = "Cumulated CO2", visible = F, mode = "markers")

fig <- fig %>% layout(
  title = "Comparisons of variable based on Timeline",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "ΔTemperatures"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "Cumulated CO2")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth10 = lm(Argentina$residents~Argentina$dC, span=0.75)
ll.smooth11 = lm(Argentina$jobless~Argentina$dC, span=0.75)
ll.smooth12 = lm(Argentina$Deaths~Argentina$dC, span=0.75)
ll.smooth13 = lm(Argentina$GDP~Argentina$dC, span=0.75)

fig <- plot_ly(Argentina, x =  ~Argentina$dC, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth10), name = "Population", alpha=1)
fig <- fig %>% add_trace(y = ~Argentina$residents, name = "Population", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth11), name = "Number of unemployed people", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Argentina$jobless, name = "Number of unemployed people", visible = F, mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth12), name = "Number of deaths", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Argentina$Deaths, name = "Number of deaths", mode = "markers", visible = F)
fig <- fig %>% add_trace(y = predict(ll.smooth13), name = "GDP", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Argentina$GDP, name = "GDP", mode = "markers", visible = F)
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Argentina",
    xaxis = list(domain = c(0.1, 1), title = "Difference of Temperature in Argentina"),
    yaxis = list(title = "variable"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Population"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Unemployed"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "GDP")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Argentina$C~Argentina$CO2, span=0.75)
ll.smooth2 = lm(Argentina$dC~Argentina$CO2, span=0.75)
fig <- plot_ly(Argentina, x =  ~Argentina$CO2, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Argentina$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Argentina$dC, name = "Differences of temperatures in Argentina", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Argentina",
    xaxis = list(domain = c(0.1, 1), title = "CO2 emission in Argentina"),
    yaxis = list(title = "°C"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Argentina$C~Argentina$CO2_cumulated, span=0.75)
ll.smooth2 = lm(Argentina$dC~Argentina$CO2_cumulated, span=0.75)
fig <- plot_ly(Argentina, x =  ~Argentina$CO2_cumulated, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Argentina$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Argentina$dC, name = "Differences of temperatures", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variaton based on cumulated CO2 in Argentina",
    xaxis = list(domain = c(0.1, 1), title = "Cumulated CO2 emissions of Argentina"),
    yaxis = list(title = "°C"),
  updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

#### 3.1.5.3. Linear Regression Model(s)

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Argentina)
mynullmodel <- lm(Argentina$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Argentina)
mynullmodel <- lm(Argentina$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r}
model1 <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Argentina)
new_model <- lm(C ~ GDP + Deaths + residents, data = Argentina)
model2 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Argentina)
new_model2 <- lm(dC ~ CO2_cumulated, data = Argentina)
```

```{r}
library(sjPlot)
tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Temperature in fonction of different variables", "Temperature reduced model", "Differences of Temperature", "Difference of Temperature reduced model"),
          p.style = "stars",
          file="output.html")
```

 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Argentina_scale)
mynullmodel <- lm(Argentina_scale$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model10 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Argentina_scale)
mynullmodel <- lm(Argentina_scale$C~1)
step(model10, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r}
model1_scale <- lm(C ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Argentina_scale)
new_model <- lm(C ~GDP + Deaths + residents, data = Argentina_scale)
model2 <- lm(dC ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Argentina_scale)
new_model2 <- lm(dC ~ CO2_cumulated, data = Argentina_scale)
```

```{r, message=FALSE, warning=FALSE}
library(sjPlot)

tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Scaled temperature in fonction of different variables", "Scaled temperature reduced model", "Scaled differences of temperature", "Scaled difference of temperature reduced model"),
          p.style = "stars",
          file="output.html")
```




```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Argentina)
mynullmodel <- lm(Argentina$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ jobless + Deaths + residents, data=Argentina)
mynullmodel <- lm(Argentina$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Argentina)
model7 <- lm(CO2 ~  GDP + jobless + Deaths + residents, data = Argentina)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Argentina)
model8 <- lm(CO2_cumulated ~ jobless + Deaths + residents, data = Argentina)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Emission relative to variables", "Emissions reduced model", "Cumulative Emissions", "Cumulative Emissions reduced model"),
           p.style = "stars",
          file="output.html")
```

If we look at the coefficients (estimates), we can see the the value are not significant. That's why we now look at the scaled values, if it changes the models and the values. 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Argentina_scale)
mynullmodel <- lm(Argentina_scale$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=Argentina_scale)
mynullmodel <- lm(Argentina_scale$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Argentina_scale)
model7 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data = Argentina_scale)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Argentina_scale)
model8 <- lm(CO2_cumulated ~  GDP + jobless + Deaths + residents, data = Argentina_scale)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Scaled emission relative to variables", "Scaled emissions reduced model", "Scaled cumulative emissions", "Scaled cumulative emissions reduced model"),
           p.style = "stars",
          file="output.html")
```




### 3.1.10. Japan
```{r}
Japan <- df %>% filter(Countries %in% "Japan")
Japan_scale <- Japan
Japan_scale[, -c(1,2)] <- scale(Japan[, -c(1,2)])
table1::label(Japan$residents) <- "Population"
table1::label(Japan$GDP) <- "GDP"
table1::label(Japan$dC) <- "Temperature differential"
table1::label(Japan$Deaths) <- "Death"
table1::label(Japan$jobless) <- "Unemployed"
table1::label(Japan$CO2_cumulated) <- "Cumulated CO2"
table1::table1(~residents + GDP + Deaths + dC + jobless + CO2_cumulated, data = Japan, overall="Japan")
```

```{r, warning=FALSE, message=FALSE}
library(plotly())
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = Japan$dC, visible = TRUE)
fig <- fig %>% add_trace(y = Japan$C, visible = FALSE)
fig <- fig %>% add_trace(y = Japan$CO2, visible = FALSE)
fig <- fig %>% add_trace(y = Japan$CO2_cumulated, visible = FALSE)
fig <- fig %>% add_trace(y = Japan$residents, visible = FALSE)
fig <- fig %>% add_trace(y = Japan$Deaths, visible = FALSE)
fig <- fig %>% add_trace(y = Japan$GDP, visible = FALSE)
fig <- fig %>% add_trace(y = Japan$jobless, visible = FALSE)

fig <- fig %>% layout(
  title = "Japanese Box Plot of each variables",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "Differention of Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Cumulated CO2"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE)),
               label = "Population"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE)),
               label = "GDP"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)),
               label = "Unemployment")
            )
          )
        )
)
fig
```

#### 3.1.10.1. Correlation
```{r, message=FALSE, warning=FALSE}
corrplot.mixed(cor(Japan[,-c(1, 2)]),
               lower = "number", 
               upper = "circle",
               tl.col = "black")
```
```{r, message=FALSE, warning=FALSE}
model1 <- lm(Japan$C ~ Japan$CO2 + Japan$GDP + Japan$jobless + Japan$Deaths  + Japan$residents)
vif_values1 <- vif(model1)
bar_plot_vif2 <- barplot(vif_values1, main = " Japan VIF Values 1", horiz = TRUE, col = "steelblue", name=c("CO2", "GD", "Job", "dea", "pop"))
abline(v = 5, lwd = 3, lty = 2)
```

#### 3.1.10.2. Visualization
```{r, message=FALSE, warning=FALSE}
ll.smooth1 = loess(Japan$C~Japan$Years, span=0.75)
ll.smooth2 = loess(Japan$CO2~Japan$Years, span=0.75)
ll.smooth3 = loess(Japan$dC~Japan$Years, span=0.75)
ll.smooth4 = loess(Japan$CO2_cumulated~Japan$Years, span=0.75)

fig <- plot_ly(Japan, x =  ~Years, mode="lines", alpha = 0.65)
fig <- fig %>% add_lines(y = predict(ll.smooth1), name = "Temperature", alpha=1)
fig <- fig %>% add_trace(y = ~Japan$C, name = "Temperature", mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Japan$CO2, name = "CO2", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth3), name = "dC", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Japan$dC, name = "dC", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth4), name = "Cumulated CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Japan$CO2_cumulated, name = "Cumulated CO2", visible = F, mode = "markers")

fig <- fig %>% layout(
  title = "Comparisons of variable based on Timeline",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "ΔTemperatures"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "Cumulated CO2")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth10 = lm(Japan$residents~Japan$dC, span=0.75)
ll.smooth11 = lm(Japan$jobless~Japan$dC, span=0.75)
ll.smooth12 = lm(Japan$Deaths~Japan$dC, span=0.75)
ll.smooth13 = lm(Japan$GDP~Japan$dC, span=0.75)

fig <- plot_ly(Japan, x =  ~Japan$dC, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth10), name = "Population", alpha=1)
fig <- fig %>% add_trace(y = ~Japan$residents, name = "Population", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth11), name = "Number of unemployed people", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Japan$jobless, name = "Number of unemployed people", visible = F, mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth12), name = "Number of deaths", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Japan$Deaths, name = "Number of deaths", mode = "markers", visible = F)
fig <- fig %>% add_trace(y = predict(ll.smooth13), name = "GDP", alpha=1, visible = F)
fig <- fig %>% add_trace(y = ~Japan$GDP, name = "GDP", mode = "markers", visible = F)
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Japan",
    xaxis = list(domain = c(0.1, 1), title = "Difference of Temperature in Japan"),
    yaxis = list(title = "variable"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Population"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "Unemployed"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "Deaths"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "GDP")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Japan$C~Japan$CO2, span=0.75)
ll.smooth2 = lm(Japan$dC~Japan$CO2, span=0.75)
fig <- plot_ly(Japan, x =  ~Japan$CO2, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Japan$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Japan$dC, name = "Differences of temperatures in Japan", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variation based on CO2 in Japan",
    xaxis = list(domain = c(0.1, 1), title = "CO2 emission in Japan"),
    yaxis = list(title = "°C"),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

```{r, message=FALSE, warning=FALSE}
ll.smooth1 = lm(Japan$C~Japan$CO2_cumulated, span=0.75)
ll.smooth2 = lm(Japan$dC~Japan$CO2_cumulated, span=0.75)
fig <- plot_ly(Japan, x =  ~Japan$CO2_cumulated, mode="lines", alpha = 0.65)
fig <- fig %>% add_trace(y = predict(ll.smooth1), name = "Temperatures", alpha=1)
fig <- fig %>% add_trace(y = ~Japan$C, name = "Temperatures", mode = "markers")
fig <- fig %>% add_trace(y = predict(ll.smooth2), name = "Differences of temperatures", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~Japan$dC, name = "Differences of temperatures", visible = F, mode = "markers")
fig <- fig %>% layout(
  title = "Temperature variaton based on cumulated CO2 in Japan",
    xaxis = list(domain = c(0.1, 1), title = "Cumulated CO2 emissions of Japan"),
    yaxis = list(title = "°C"),
  updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE)),
                label = "Temperature"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE)),
               label = "ΔTemperatures")
            )
          )
        )
)
fig
```

####3.1.10.3. Linear Regression Model(s)

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Japan)
mynullmodel <- lm(Japan$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Japan)
mynullmodel <- lm(Japan$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r}
model1 <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Japan)
new_model <- lm(C ~ GDP + CO2_cumulated + Deaths + residents, data = Japan)
model2 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths  + residents, data=Japan)
new_model2 <- lm(dC ~ CO2 + CO2_cumulated, data = Japan)
```

```{r}
library(sjPlot)
tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Temperature in fonction of different variables", "Temperature reduced model", "Differences of Temperature", "Difference of Temperature reduced model"),
          p.style = "stars",
          file="output.html")
```

 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model <- lm(C ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Japan_scale)
mynullmodel <- lm(Japan_scale$C~1)
step(model, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model10 <- lm(dC ~ CO2 + GDP + CO2_cumulated + jobless + Deaths + residents, data=Japan_scale)
mynullmodel <- lm(Japan_scale$C~1)
step(model10, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r}
model1_scale <- lm(C ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Japan_scale)
new_model <- lm(C ~GDP + CO2_cumulated + Deaths + residents, data = Japan_scale)
model2 <- lm(dC ~ GDP + CO2_cumulated + jobless + Deaths  + residents, data=Japan_scale)
new_model2 <- lm(dC ~ CO2 + CO2_cumulated, data = Japan_scale)
```

```{r, message=FALSE, warning=FALSE}
library(sjPlot)

tab_model(model1, new_model, model2, new_model2,
          show.ci = FALSE, 
          pred.labels = c("Intecept", "CO2 emissions", "GDP", "cumulated CO2", "Number of unemployed", "Number of Deaths", "Population"), 
          dv.labels = c("Scaled temperature in fonction of different variables", "Scaled temperature reduced model", "Scaled differences of temperature", "Scaled difference of temperature reduced model"),
          p.style = "stars",
          file="output.html")
```




```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Japan)
mynullmodel <- lm(Japan$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ jobless + Deaths + residents, data=Japan)
mynullmodel <- lm(Japan$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```


```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Japan)
model7 <- lm(CO2 ~  GDP + residents, data = Japan)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Japan)
model8 <- lm(CO2_cumulated ~ jobless + Deaths + residents, data = Japan)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Emission relative to variables", "Emissions reduced model", "Cumulative Emissions", "Cumulative Emissions reduced model"),
           p.style = "stars",
          file="output.html")
```

If we look at the coefficients (estimates), we can see the the value are not significant. That's why we now look at the scaled values, if it changes the models and the values. 

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Japan_scale)
mynullmodel <- lm(Japan_scale$CO2~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE, echo=TRUE, include=FALSE}
model5 <- lm(CO2_cumulated ~ GDP + jobless + Deaths + residents, data=Japan_scale)
mynullmodel <- lm(Japan_scale$CO2_cumulated~1)
step(model5, scope=list(lower=mynullmodel, upper=model), direction="backward")
```

```{r, message=FALSE, warning=FALSE}
model5 <- lm(CO2 ~ GDP + jobless + Deaths + residents, data=Japan_scale)
model7 <- lm(CO2 ~ GDP + residents, data = Japan_scale)
model6 <- lm(CO2_cumulated ~ GDP + jobless + Deaths  + residents, data=Japan_scale)
model8 <- lm(CO2_cumulated ~  jobless + Deaths + residents, data = Japan_scale)
tab_model(model5,model7, model6, model8,
          show.ci = FALSE,
          pred.labels = c("Intecept", "GDP", "Number of unemployed", "Number of Deaths", "Population"),
          dv.labels = c("Scaled emission relative to variables", "Scaled emissions reduced model", "Scaled cumulative emissions", "Scaled cumulative emissions reduced model"),
           p.style = "stars",
          file="output.html")
```

## 3.2. International Comparisons and Analysi
```{r}
library(table1)
table1::label(df$residents) <- "Population"
table1::label(df$GDP) <- "GDP"
table1::label(df$dC) <- "Temperature differential"
table1::label(df$Deaths) <- "Death"
table1::label(df$jobless) <- "Unemployed"
table1::label(df$CO2_cumulated) <- "Cumulated CO2"
table1::table1(~residents + GDP + Deaths + dC + jobless + CO2_cumulated, data = df)
```

```{r, results='asis'}
boxplot(df$dC,ylab="°C",main="Boxplot for differential of temperature in the world")
``` 

```{r, message=FALSE, warning=FALSE}
df[is.na(df)] <- 0
library(corrplot)
corrplot.mixed(cor(df[,-c(1, 2)]),
               lower = "number", 
               upper = "circle",
               tl.col = "black")
```


```{r, message=FALSE, warning=FALSE}
df[is.na(df)] <- 0
ll.smooth5 = loess(df$C~df$Years, span=0.75)
ll.smooth6 = loess(df$CO2~df$Years, span=0.75)
ll.smooth7 = loess(df$dC~df$Years, span=0.75)
ll.smooth8 = loess(df$CO2_cumulated~df$Years, span=0.75)

fig <- plot_ly(df, x =  ~Years, mode="lines", alpha = 0.65)
fig <- fig %>% add_lines(y = predict(ll.smooth5), name = "Temperature", alpha=1)
fig <- fig %>% add_trace(y = ~df$C, name = "Temperature", mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth6), name = "CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~df$CO2, name = "CO2", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth7), name = "dC", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~df$dC, name = "dC", visible = F, mode = "markers")

fig <- fig %>% add_trace(y = predict(ll.smooth8), name = "Cumulated CO2", visible = F, alpha=1)
fig <- fig %>% add_trace(y = ~df$CO2_cumulated, name = "Cumulated CO2", visible=F, mode = "markers")

fig <- fig %>% layout(
  title = "Comparisons of variable based on Timeline",
    xaxis = list(domain = c(0.1, 1)),
    updatemenus = list(
        list(
          y = 0.8,
          buttons = list(
            list(method = "restyle",
                args = list("visible", list(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                label = "Temperature"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)),
               label = "CO2"),
          
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE)),
               label = "ΔTemperatures"),
            
            list(method = "restyle",
               args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE)),
               label = "Cumulated CO2")
            )
          )
        )
)
fig
```


Now, we want to explore another topics adressed in the research question: I there any relationships between the increased temperatures and the location of the countries. To analysze this, we will look at the difference in temperature and the location dataset to create a new dataset.
```{r, message=FALSE, warning=FALSE}
library(rworldmap)
dataFramee <- deltatemperatures

sPDF <- joinCountryData2Map(dataFramee, joinCode='NAME', nameJoinColumn='Countries')
mapCountryData(sPDF, nameColumnToPlot='dC', mapTitle = "Differences in Temperatures per location", missingCountryCol='dark grey')
```

```{r, message=FALSE, warning=FALSE}
library(rworldmap)
dataFramee <- deltatemperatures

sPDF <- joinCountryData2Map(dataFramee, joinCode='NAME', nameJoinColumn='Countries')
mapCountryData(sPDF, nameColumnToPlot='dC', mapTitle = "Differences in Temperatures per location", missingCountryCol='dark grey', mapRegion = "Eurasia")
```

# 5. Conclusion
## 5.1. Key message
## 5.2. Limitations
## 5.3. Future Work

