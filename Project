#                       Data Science Project Commented Version 1.11.2022 (see below for new version)


    #First, we have import the different library needed for our project
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(lubridate)
--------------------------------------------------------------------------------
  
    #then, we begin by importing the different datasets in our R software and this will
    #save them into different variable of type dataframe.
population <- read.csv("world_population.csv")
GDP <- read.csv("world_country_gdp_usd.csv")
meatconsumption <- read.csv("meat_consumption.csv")
unemployment <- read.csv("inflation interest unemployment.csv")
lifeexpecatncy <- read.csv("Life Expectancy Data.csv")
temperatures <- read.csv("GlobalLandTemperaturesByCountry.csv")
costofliving <- read.csv("costofliving.csv")
CO2_emissions <- read.csv("CO2_Emissions_1960-2018.csv")
--------------------------------------------------------------------------------
#                           Dataset 1: Temperatures
  
    #Now we can begin with tydying the first dataset, namely the temperatures dataset
    #we first print the dataset in order to know how it looks like
attach(temperatures)
head(temperatures)

    #then, this is of type dataframe, so we have to transform it into a tibble
temperatures["dt"]
temp <- as.tbl(temperatures)

    #now, to be able to visualize late, we have to make the date column into datatype
    #date. 
dt <- as.Date(dt)

    #we select only the columns that are useful for our project
temp <- select(temperatures, dt, AverageTemperature, Country)

    #we replace the NA value by 0 because we have to compute the mean
    #after, so with one NA it will gives us NA.
temp[is.na(temp)] = 0

    #in order to clean even more the data, we want to have only the year
    # in the date column
temp$year <- format(as.Date(temp$dt, format="%Y-%d-%m"),"%Y")

    #we reorganise a little bit our tibble
temperature_clean <- select(temp, year, Country, AverageTemperature)
temperature_clean

    #Now, we have daily temperture. In order to analyze thid
    #we have to transform our value into yearly data, we use the following
temp_df <- temperature_clean %>%
  group_by(year, Country) %>%
  summarize((mean=mean(AverageTemperature)))

    #The period we consider begin in 1960, the previous value are eliminate
period <- filter(temp_df, year >= 1960)

--------------------------------------------------------------------------------
#                       Dataset 2: CO2 Emissions
  
  #Now we look at a new dataset, the one with the CO2 emissions per country.
  attach(CO2_emissions)

#we transform it into a tibble
emission <- as.tbl(CO2_emissions)
head(emission)

#then, the Year are named with an X at the beginning, so we change the colnames
colnames(emission) <- c("Countries", 1960:2018)

#to do it, we have to transform they numbe into character
years <- as.character(1960:2018)

#Now, we want to have a column with the different year, in order to have this, we do:
emission_clean <- emission %>%
  pivot_longer(years, names_to = "Years", values_to = "CO2")
emission_clean

--------------------------------------------------------------------------------
                          #Germany
  
  #Now, let's have a look at the first Country, the Germany
    #first, we filter our cleaned dataset by selecting only the Germany
germany_temp <- filter(period, Country == "Germany")
germany_temp

    #then, we rename the column
colnames(germany_temp) = c("Years", "Countries", "Average_Temperature")
germany_temp

    #in order to visualize, the current column Years is of type chr, we have to 
    #transform into a numeric
germany_temp[1] <- apply(germany_temp[1], 2, as.numeric)
ggplot(data = germany_temp, mapping = aes(x = Years, y = Average_Temperature)) +
  geom_point() +
  geom_smooth()


#
france_co2 <- filter(emission_clean, Countries == "France")
france_co2[2] <- apply(france_co2[2], 2, as.numeric)
france_co2

ggplot(data = france_co2, mapping = aes(x = years, y = CO2), color="blue", main = "Quantity of CO2 per year in France") +
  geom_point() +
  geom_smooth()

merge(france_co2, france_temp, by=c("Countries", "Years"))

# _______________________________________________________________________________________________________________________

brazil_co2 <- filter(emission_clean, Countries == "Brazil")
brazil_co2[2] <- apply(brazil_co2[2], 2, as.numeric)
brazil_co2

ggplot(data = brazil_co2, mapping = aes(x = years, y = CO2), color="blue") +
  geom_point() +
  geom_smooth()

#_________________________________________________________________________________________________________________________

sa_co2 <- filter(emission_clean, Countries == "South Africa")
sa_co2[2] <- apply(sa_co2[2], 2, as.numeric)
sa_co2

ggplot(data = sa_co2, mapping = aes(x = years, y = CO2), color="blue") +
  geom_point() +
  geom_smooth()
#___________________________________________________________________________________________________________________________
sk_co2 <- filter(emission_clean, Countries == "Korea, Dem. People's Rep.")
sk_co2[2] <- apply(sk_co2[2], 2, as.numeric)
sk_co2

ggplot(data = sk_co2, mapping = aes(x = years, y = CO2), color="blue") +
  geom_point() +
  geom_smooth()
    
#_______________________________________________________________________________________________________________________
egypt_co2 <- filter(emission_clean, Countries == "Egypt, Arab Rep.")
egypt_co2[2] <- apply(egypt_co2[2], 2, as.numeric)
egypt_co2

ggplot(data = egypt_co2, mapping = aes(x = years, y = CO2), color="blue") +
  geom_point() +
  geom_smooth()
  
  
  
  
  
  
                                NEW VERSION 08.11.2022
  
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(car)

  population <- read.csv("TotalPopulationBySex.csv")
  GDP <- read.csv("world_country_gdp_usd.csv")
  unemployment <- read.csv("inflation interest unemployment.csv")
  temperatures <- read.csv("GlobalLandTemperaturesByCountry.csv")
  CO2_emissions <- read.csv("CO2_Emissions_1960-2018.csv")
  urban_population <- read.csv2("Data urban population.csv")
  location <- read.csv("world_country_and_usa_states_latitude_and_longitude_values.csv")
  demographic <- read.csv("demographic.csv")
  
  
  
  
  attach(temperatures)
  head(temperatures)
  temperatures["dt"]
  temp <- as.tbl(temperatures)
  dt <- as.Date(dt)
  temp <- select(temperatures, dt, AverageTemperature, Country)
  temp[is.na(temp)] = 0
  temp$year <- format(as.Date(temp$dt, format="%Y-%d-%m"),"%Y")
  temperature_clean <- select(temp, year, Country, AverageTemperature)
  temperature_clean
  temp_df <- temperature_clean %>%
    group_by(year, Country) %>%
    summarize((mean=mean(AverageTemperature)))
  period <- filter(temp_df, year >= 1970)
  colnames(period) = c("Years", "Countries", "Average_Temperature")
  period[1] <- apply(period[1], 2, as.numeric)
  period
  
  
  
  attach(CO2_emissions)
  emission <- as.tbl(CO2_emissions)
  head(emission)
  colnames(emission) <- c("Countries", 1960:2018)
  years <- as.character(1960:2018)
  emission_clean1 <- emission %>%
    pivot_longer(years, names_to = "Years", values_to = "CO2")
  emission_clean1[2] <- apply(emission_clean1[2], 2, as.numeric)
  emission_clean2 <- filter(emission_clean1, Years <= 2013)
  emission_clean <- filter(emission_clean2, Years >= 1970)
  emission_clean
  
  
  
  GDP_clean <- select(GDP, Country.Name, year, GDP_USD)
  colnames(GDP_clean) <- c("Countries", "Years", "GDP")
  GDP_tbl1 <- as.tbl(GDP_clean)
  GDP_tbl1[is.na(GDP_tbl1)] = 0
  GDP_tbl2 <- filter(GDP_tbl1, Years <= 2013)
  GDP_tbl <- filter(GDP_tbl2, Years >= 1970)
  GDP_tbl
  
  
  
  unemployment_clean <- select(unemployment, country, year, Unemployment..total....of.total.labor.force...national.estimate.)
  colnames(unemployment_clean) <- c("Countries", "Years", "Unemployment_rate")
  unemployment_tbl1 <- as.tbl(unemployment_clean)
  unemployment_tbl1[is.na(unemployment_tbl1)] = 0
  unemployment_tbl2 <- filter(unemployment_tbl1, Years <= 2013)
  unemployment_tbl <- filter(unemployment_tbl2, Years >= 1970)
  unemployment_tbl
  
  
  
  "Finland" %in% population$Location
  population_clean <- select(population, Location, Time, PopTotal)
  colnames(population_clean) <- c("Countries", "Years", "Population")
  population_tbl1 <- as.tbl(population_clean)
  population_tbl1[is.na(population_tbl1)] = 0
  populations_tbl2 <- filter(population_tbl1, Years <= 2013)
  population_tbl <- filter(populations_tbl2, Years >= 1970)
  population_tbl
  
  
  urban_population
  urban_population_clean <- urban_population[, -which(names(urban_population) == "Country.code" |names(urban_population) == "Note" | names(urban_population) == "Index") ]
  urban_population_clean
  colnames(urban_population_clean) <- c("Countries", 1950:2050)
  urban_population_tbl <- as.tbl(urban_population_clean)
  years <- as.character(1950:2050)
  urban_population_cleaned1 <- urban_population_tbl %>%
    pivot_longer(years, names_to = "Years", values_to = "Urban_population")
  urban_population_cleaned1[2] <- apply(urban_population_cleaned1[2], 2, as.numeric)
  urban_population_cleaned2 <- filter(urban_population_cleaned1, Years <= 2013)
  urban_population_cleaned <- filter(urban_population_cleaned2, Years >= 1970)
  urban_population_cleaned
  
  
  
  
  head(demographic)
  demographic_clean <- select(demographic, Location, Time, Deaths, InfantDeaths)
  head(demographic_clean)
  colnames(demographic_clean) <- c("Countries", "Years", "Deaths", "InfantsDeaths")
  demographic_tbl <- as.tbl(demographic_clean)
  demographic_tbl_clean1 <- filter(demographic_tbl, Years <= 2013)
  demographic_tbl_clean <- filter(demographic_tbl_clean1, Years >= 1970)
  
  
  
  
  location_clean <- select(location, country, latitude, longitude)
  colnames(location_clean) <- c("Countries", "latitude", "longitude")
  location_clean
  lifeexpecatncy_filtered <- select(lifeexpecatncy, Country, Year, Life.expectancy)
  colnames(lifeexpecatncy_filtered) <- c("Countries", "Years", "Life_expectancy")
  lifeexpectancy_tbl <- as.tbl(lifeexpecatncy_filtered)
  lifeexpectancy_tbl[is.na(lifeexpectancy_tbl)] = 0
  lifeexpectancy_tbl
  
  
 
  
  
  countries = c("Finland", "Brazil", "South Africa", "Belgium", "Japan")
  i = 0
  for (i in countries) {
    temp <- filter(period, Countries == i)
    co2 <- filter(emission_clean, Countries == i)
    gdp <- filter(GDP_tbl, Countries == i)
    unemployed <- filter(unemployment_tbl, Countries == i)
    populated <- filter(population_tbl, Countries == i)
    urban_populated <- filter(urban_population_cleaned, Countries == i)
    deads <- filter(demographic_tbl_clean, Countries == i)
    variable_list <- list(temp, co2, gdp, unemployed, populated, urban_populated, deads)
    df <- Reduce(function(x, y) merge(x, y, all=TRUE), variable_list)
    return(df) 
  }
  
  plot(df[-2])
  cor(df[-2])
  linear_model <- lm(data = df, Average_Temperature ~ CO2 + GDP + Unemployment_rate + Population + Urban_population + Deaths + InfantsDeaths)
  summary(linear_model)
  null_model <- lm(Average_Temperature ~ 1)
  step(linear_model, scope=list(lower=null_model, upper=linear_model), direction="backward")
  vif(linear_model)
  
  
  
  finland_location <- filter(location_clean, Countries == "Finland")
